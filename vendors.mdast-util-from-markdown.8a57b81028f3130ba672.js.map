{"version":3,"sources":["webpack:///./node_modules/mdast-util-from-markdown/index.js","webpack:///./node_modules/mdast-util-from-markdown/dist/index.js"],"names":["module","exports","value","encoding","options","undefined","settings","config","extensions","index","length","extension","configure","canContainEols","enter","autolink","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","heading","blockQuote","type","children","characterEscape","characterReference","codeFenced","codeFlow","codeFencedFenceInfo","buffer","codeFencedFenceMeta","codeIndented","codeText","codeTextData","data","codeFlowValue","definition","identifier","label","title","url","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreakEscape","hardBreak","hardBreakTrailing","htmlFlow","html","htmlFlowData","htmlText","htmlTextData","image","alt","listItem","token","spread","_spread","checked","listItemValue","getData","this","stack","start","parseInt","sliceSerialize","setData","listOrdered","list","listUnordered","paragraph","reference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","thematicBreak","exit","closer","atxHeadingSequence","depth","onexitdata","call","characterEscapeValue","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","tail","safeFromInt","decode","pop","position","end","point","resume","replace","codeFencedFence","lang","meta","normalizeIdentifier","toLowerCase","onexithardbreak","context","referenceType","fragment","labelText","lineEnding","indexOf","resource","setextHeadingLineSequence","charCodeAt","setextHeadingText","mdastExtensions","events","handler","listStart","tokenStack","listStack","push","prepareList","own","assign","Error","stringifyPosition","line","column","offset","tailIndex","lineIndex","tailEvent","event","firstBlankLineIndex","atMarker","containerBalance","listSpread","splice","key","d","create","and","node","open","toString","siblings","ordered","compiler","postprocess","parser","document","write","preprocessor","left","concat","Object"],"mappings":"0FAEAA,EAAOC,QAAU,EAAQ,M,iCCAzBD,EAAOC,QAeP,SAAsBC,EAAOC,EAAUC,GACb,iBAAbD,IACTC,EAAUD,EACVA,OAAWE,GAGb,OAQF,SAAkBD,GAChB,IAAIE,EAAWF,GAAW,GACtBG,EAuvBN,SAAmBA,EAAQC,GACzB,IAAIC,GAAS,EAEb,OAASA,EAAQD,EAAWE,QAC1BC,EAAUJ,EAAQC,EAAWC,IAG/B,OAAOF,EA9vBMK,CACX,CACEC,eAAgB,CACd,WACA,WACA,UACA,YACA,UAGFC,MAAO,CACLC,SAAUC,EAAOC,GACjBC,iBAAkBC,EAClBC,cAAeD,EACfE,WAAYL,EAAOM,GACnBC,WAAYP,GAspBlB,WACE,MAAO,CAACQ,KAAM,aAAcC,SAAU,OAtpBlCC,gBAAiBP,EACjBQ,mBAAoBR,EACpBS,WAAYZ,EAAOa,GACnBC,oBAAqBC,EACrBC,oBAAqBD,EACrBE,aAAcjB,EAAOa,EAAUE,GAC/BG,SAAUlB,GAupBhB,WACE,MAAO,CAACQ,KAAM,aAActB,MAAO,MAxpBJ6B,GAC3BI,aAAchB,EACdiB,KAAMjB,EACNkB,cAAelB,EACfmB,WAAYtB,GAupBlB,WACE,MAAO,CACLQ,KAAM,aACNe,WAAY,GACZC,MAAO,KACPC,MAAO,KACPC,IAAK,OA5pBHC,4BAA6BZ,EAC7Ba,sBAAuBb,EACvBc,sBAAuBd,EACvBe,SAAU9B,GA6pBhB,WACE,MAAO,CAACQ,KAAM,WAAYC,SAAU,OA7pBhCsB,gBAAiB/B,EAAOgC,GACxBC,kBAAmBjC,EAAOgC,GAC1BE,SAAUlC,EAAOmC,EAAMpB,GACvBqB,aAAcjC,EACdkC,SAAUrC,EAAOmC,EAAMpB,GACvBuB,aAAcnC,EACdoC,MAAOvC,GAsqBb,WACE,MAAO,CAACQ,KAAM,QAASiB,MAAO,KAAMC,IAAK,GAAIc,IAAK,SAtqB9ChB,MAAOT,EACPd,KAAMD,EAAOC,GACbwC,SAAUzC,GAqrBhB,SAAkB0C,GAChB,MAAO,CACLlC,KAAM,WACNmC,OAAQD,EAAME,QACdC,QAAS,KACTpC,SAAU,OAzrBRqC,cA8WN,SAA8BJ,GACxBK,EAAQ,iCACVC,KAAKC,MAAMD,KAAKC,MAAMvD,OAAS,GAAGwD,MAAQC,SACxCH,KAAKI,eAAeV,GACpB,IAGFW,EAAQ,iCApXNC,YAAatD,EAAOuD,GAyW1B,WACEF,EAAQ,+BAA+B,MAzWnCG,cAAexD,EAAOuD,GACtBE,UAAWzD,GA0rBjB,WACE,MAAO,CAACQ,KAAM,YAAaC,SAAU,OA1rBjCiD,UAkkBN,WACEL,EAAQ,gBAAiB,cAlkBrBM,gBAAiB5C,EACjB6C,0BAA2B7C,EAC3B8C,oBAAqB9C,EACrB+C,cAAe9D,EAAOM,GACtByD,OAAQ/D,GAwrBd,WACE,MAAO,CAACQ,KAAM,SAAUC,SAAU,OAxrB9BuD,cAAehE,GA+rBrB,WACE,MAAO,CAACQ,KAAM,qBA7rBZyD,KAAM,CACJ5D,WAAY6D,IACZC,mBA6ZN,SAAkCzB,GAC3BM,KAAKC,MAAMD,KAAKC,MAAMvD,OAAS,GAAG0E,QACrCpB,KAAKC,MAAMD,KAAKC,MAAMvD,OAAS,GAAG0E,MAAQpB,KAAKI,eAC7CV,GACAhD,SAhaAK,SAAUmE,IACV9D,cAimBN,SAA6BsC,GAC3B2B,EAAWC,KAAKtB,KAAMN,GACtBM,KAAKC,MAAMD,KAAKC,MAAMvD,OAAS,GAAGgC,IAChC,UAAYsB,KAAKI,eAAeV,IAnmB9BxC,iBA2lBN,SAAgCwC,GAC9B2B,EAAWC,KAAKtB,KAAMN,GACtBM,KAAKC,MAAMD,KAAKC,MAAMvD,OAAS,GAAGgC,IAAMsB,KAAKI,eAAeV,IA5lBxDnC,WAAY2D,IACZK,qBAAsBF,EACtBG,oCAAqCC,EACrCC,gCAAiCD,EACjCE,wBAgkBN,SAAuCjC,GACrC,IAEIxD,EACA0F,EAHAxD,EAAO4B,KAAKI,eAAeV,GAC3BlC,EAAOuC,EAAQ,0BAIfvC,GACFtB,EAAQ2F,EACNzD,EACS,oCAATZ,EAA6C,GAAK,IAGpD6C,EAAQ,2BAERnE,EAAQ4F,EAAO1D,IAGjBwD,EAAO5B,KAAKC,MAAM8B,OACb7F,OAASA,EACd0F,EAAKI,SAASC,IAAMC,EAAMxC,EAAMuC,MAllB5BrE,WAAYsD,GAkXlB,WACE,IAAI9C,EAAO4B,KAAKmC,SAChBnC,KAAKC,MAAMD,KAAKC,MAAMvD,OAAS,GAAGR,MAAQkC,EAAKgE,QAC7C,2BACA,IAGF/B,EAAQ,qBAxXJgC,gBA0WN,WAEE,GAAItC,EAAQ,kBAAmB,OAC/BC,KAAKjC,SACLsC,EAAQ,kBAAkB,IA7WtBvC,oBA+VN,WACE,IAAIM,EAAO4B,KAAKmC,SAChBnC,KAAKC,MAAMD,KAAKC,MAAMvD,OAAS,GAAG4F,KAAOlE,GAhWrCJ,oBAmWN,WACE,IAAII,EAAO4B,KAAKmC,SAChBnC,KAAKC,MAAMD,KAAKC,MAAMvD,OAAS,GAAG6F,KAAOnE,GApWrCC,cAAegD,EACfpD,aAAciD,GAuXpB,WACE,IAAI9C,EAAO4B,KAAKmC,SAChBnC,KAAKC,MAAMD,KAAKC,MAAMvD,OAAS,GAAGR,MAAQkC,KAxXtCF,SAAUgD,GA2dhB,WACE,IAAI9C,EAAO4B,KAAKmC,SAChBnC,KAAKC,MAAMD,KAAKC,MAAMvD,OAAS,GAAGR,MAAQkC,KA5dtCD,aAAckD,EACdjD,KAAMiD,EACN/C,WAAY4C,IACZvC,4BAqYN,WACE,IAAIP,EAAO4B,KAAKmC,SAChBnC,KAAKC,MAAMD,KAAKC,MAAMvD,OAAS,GAAGgC,IAAMN,GAtYpCQ,sBAsXN,SAAqCc,GAEnC,IAAIlB,EAAQwB,KAAKmC,SACjBnC,KAAKC,MAAMD,KAAKC,MAAMvD,OAAS,GAAG8B,MAAQA,EAC1CwB,KAAKC,MAAMD,KAAKC,MAAMvD,OAAS,GAAG6B,WAAaiE,EAC7CxC,KAAKI,eAAeV,IACpB+C,eA3XE5D,sBA8XN,WACE,IAAIT,EAAO4B,KAAKmC,SAChBnC,KAAKC,MAAMD,KAAKC,MAAMvD,OAAS,GAAG+B,MAAQL,GA/XtCU,SAAUoC,IACVnC,gBAAiBmC,EAAOwB,GACxBzD,kBAAmBiC,EAAOwB,GAC1BxD,SAAUgC,GAuchB,WACE,IAAI9C,EAAO4B,KAAKmC,SAChBnC,KAAKC,MAAMD,KAAKC,MAAMvD,OAAS,GAAGR,MAAQkC,KAxctCgB,aAAciC,EACdhC,SAAU6B,GA0chB,WACE,IAAI9C,EAAO4B,KAAKmC,SAChBnC,KAAKC,MAAMD,KAAKC,MAAMvD,OAAS,GAAGR,MAAQkC,KA3ctCkB,aAAc+B,EACd9B,MAAO2B,GAoeb,WACE,IAAIyB,EAAU3C,KAAKC,MAAMD,KAAKC,MAAMvD,OAAS,GAGzCqD,EAAQ,gBACV4C,EAAQnF,MAAQ,YAChBmF,EAAQC,cAAgB7C,EAAQ,kBAAoB,kBAC7C4C,EAAQjE,WACRiE,EAAQlE,eAERkE,EAAQpE,kBACRoE,EAAQnE,aACRmE,EAAQC,eAGjBvC,EAAQ,oBAlfJ7B,MA2fN,WACE,IAAIqE,EAAW7C,KAAKC,MAAMD,KAAKC,MAAMvD,OAAS,GAC1CR,EAAQ8D,KAAKmC,SAEjBnC,KAAKC,MAAMD,KAAKC,MAAMvD,OAAS,GAAG8B,MAAQtC,EAG1CmE,EAAQ,eAAe,GAEwB,SAA3CL,KAAKC,MAAMD,KAAKC,MAAMvD,OAAS,GAAGc,KACpCwC,KAAKC,MAAMD,KAAKC,MAAMvD,OAAS,GAAGe,SAAWoF,EAASpF,SAEtDuC,KAAKC,MAAMD,KAAKC,MAAMvD,OAAS,GAAG8C,IAAMtD,GAtgBtC4G,UAofN,SAAyBpD,GACvBM,KAAKC,MAAMD,KAAKC,MAAMvD,OAAS,GAAG6B,WAAaiE,EAC7CxC,KAAKI,eAAeV,IACpB+C,eAtfEM,WAsaN,SAA0BrD,GACxB,IAAIiD,EAAU3C,KAAKC,MAAMD,KAAKC,MAAMvD,OAAS,GAG7C,GAAIqD,EAAQ,eAMV,OALA4C,EAAQlF,SAASkF,EAAQlF,SAASf,OAAS,GAAGsF,SAASC,IAAMC,EAC3DxC,EAAMuC,UAGR5B,EAAQ,gBAKPN,EAAQ,iCACTxD,EAAOM,eAAemG,QAAQL,EAAQnF,OAAS,IAE/CL,EAAYmE,KAAKtB,KAAMN,GACvB2B,EAAWC,KAAKtB,KAAMN,KAvbpBzC,KAAMiE,GA8cZ,WACE,IAAIyB,EAAU3C,KAAKC,MAAMD,KAAKC,MAAMvD,OAAS,GAGzCqD,EAAQ,gBACV4C,EAAQnF,MAAQ,YAChBmF,EAAQC,cAAgB7C,EAAQ,kBAAoB,kBAC7C4C,EAAQjE,WACRiE,EAAQlE,eAERkE,EAAQpE,kBACRoE,EAAQnE,aACRmE,EAAQC,eAGjBvC,EAAQ,oBA5dJZ,SAAUyB,IACVZ,YAAaY,IACbV,cAAeU,IACfT,UAAWS,IACXP,gBAqhBN,SAA+BjB,GAC7B,IAAIlB,EAAQwB,KAAKmC,SACjBnC,KAAKC,MAAMD,KAAKC,MAAMvD,OAAS,GAAG8B,MAAQA,EAC1CwB,KAAKC,MAAMD,KAAKC,MAAMvD,OAAS,GAAG6B,WAAaiE,EAC7CxC,KAAKI,eAAeV,IACpB+C,cACFpC,EAAQ,gBAAiB,SA1hBrBO,0BAkgBN,WACE,IAAIxC,EAAO4B,KAAKmC,SAChBnC,KAAKC,MAAMD,KAAKC,MAAMvD,OAAS,GAAGgC,IAAMN,GAngBpCyC,oBAsgBN,WACE,IAAIzC,EAAO4B,KAAKmC,SAChBnC,KAAKC,MAAMD,KAAKC,MAAMvD,OAAS,GAAG+B,MAAQL,GAvgBtC6E,SA0gBN,WACE5C,EAAQ,gBA1gBJS,cAAeI,GAoYrB,WACEb,EAAQ,mCApYJ6C,0BA8XN,SAAyCxD,GACvCM,KAAKC,MAAMD,KAAKC,MAAMvD,OAAS,GAAG0E,MACa,KAA7CpB,KAAKI,eAAeV,GAAOyD,WAAW,GAAY,EAAI,GA/XpDC,kBAyXN,WACE/C,EAAQ,gCAAgC,IAzXpCU,OAAQG,IACRF,cAAeE,MAInB5E,EAAS+G,iBAAmB,IAG1BjF,EAAO,GAEX,OAEA,SAAiBkF,GACf,IAIIC,EACAC,EALAvD,EAAQ,CAAC,CAACzC,KAAM,OAAQC,SAAU,KAClCgG,EAAa,GACbC,EAAY,GACZjH,GAAS,EAITkG,EAAU,CACZ1C,MAAOA,EACPwD,WAAYA,EACZlH,OAAQA,EACRO,MAAOA,EACPmE,KAAMA,EACNlD,OAAQA,EACRoE,OAAQA,EACR9B,QAASA,EACTN,QAASA,GAGX,OAAStD,EAAQ6G,EAAO5G,QAIM,gBAA1B4G,EAAO7G,GAAO,GAAGe,MACS,kBAA1B8F,EAAO7G,GAAO,GAAGe,OAEQ,UAArB8F,EAAO7G,GAAO,GAChBiH,EAAUC,KAAKlH,IAEf+G,EAAYE,EAAU3B,IAAItF,GAC1BA,EAAQmH,EAAYN,EAAQE,EAAW/G,KAK7CA,GAAS,EAET,OAASA,EAAQ6G,EAAO5G,QACtB6G,EAAUhH,EAAO+G,EAAO7G,GAAO,IAE3BoH,EAAIvC,KAAKiC,EAASD,EAAO7G,GAAO,GAAGe,OACrC+F,EAAQD,EAAO7G,GAAO,GAAGe,MAAM8D,KAC7BwC,EAAO,CAAC1D,eAAgBkD,EAAO7G,GAAO,GAAG2D,gBAAiBuC,GAC1DW,EAAO7G,GAAO,IAKpB,GAAIgH,EAAW/G,OACb,MAAM,IAAIqH,MACR,oCACEN,EAAWA,EAAW/G,OAAS,GAAGc,KAClC,MACAwG,EAAkB,CAChB9D,MAAOuD,EAAWA,EAAW/G,OAAS,GAAGwD,MACzC+B,IAAKwB,EAAWA,EAAW/G,OAAS,GAAGuF,MAEzC,mBAiBN,OAZAhC,EAAM,GAAG+B,SAAW,CAClB9B,MAAOgC,EACLoB,EAAO5G,OAAS4G,EAAO,GAAG,GAAGpD,MAAQ,CAAC+D,KAAM,EAAGC,OAAQ,EAAGC,OAAQ,IAGpElC,IAAKC,EACHoB,EAAO5G,OACH4G,EAAOA,EAAO5G,OAAS,GAAG,GAAGuF,IAC7B,CAACgC,KAAM,EAAGC,OAAQ,EAAGC,OAAQ,KAI9BlE,EAAM,IAGf,SAAS2D,EAAYN,EAAQpD,EAAOxD,GAYlC,IAXA,IAGI+C,EACA2E,EACAC,EACAC,EACAC,EACAC,EACAC,EATAhI,EAAQyD,EAAQ,EAChBwE,GAAoB,EACpBC,GAAa,IASRlI,GAASC,GAwChB,GApCoB,mBAHpB6H,EAAQjB,EAAO7G,IAGP,GAAGe,MACS,gBAAlB+G,EAAM,GAAG/G,MACS,eAAlB+G,EAAM,GAAG/G,MAEQ,UAAb+G,EAAM,GACRG,IAEAA,IAGFD,OAAWpI,GACgB,oBAAlBkI,EAAM,GAAG/G,KACD,UAAb+G,EAAM,MAEN9E,GACCgF,GACAC,GACAF,IAEDA,EAAsB/H,GAGxBgI,OAAWpI,GAGK,eAAlBkI,EAAM,GAAG/G,MACS,kBAAlB+G,EAAM,GAAG/G,MACS,mBAAlB+G,EAAM,GAAG/G,MACS,mBAAlB+G,EAAM,GAAG/G,MACS,6BAAlB+G,EAAM,GAAG/G,OAITiH,OAAWpI,IAITqI,GACa,UAAbH,EAAM,IACY,mBAAlBA,EAAM,GAAG/G,OACY,IAAtBkH,GACc,SAAbH,EAAM,KACa,kBAAlBA,EAAM,GAAG/G,MACU,gBAAlB+G,EAAM,GAAG/G,MACb,CACA,GAAIiC,EAAU,CAIZ,IAHA2E,EAAY3H,EACZ4H,OAAYhI,EAEL+H,KAGL,GACwB,gBAHxBE,EAAYhB,EAAOc,IAGP,GAAG5G,MACS,oBAAtB8G,EAAU,GAAG9G,KACb,CACA,GAAqB,SAAjB8G,EAAU,GAAe,SAEzBD,IACFf,EAAOe,GAAW,GAAG7G,KAAO,kBAC5BmH,GAAa,GAGfL,EAAU,GAAG9G,KAAO,aACpB6G,EAAYD,OACP,GACiB,eAAtBE,EAAU,GAAG9G,MACS,qBAAtB8G,EAAU,GAAG9G,MACS,+BAAtB8G,EAAU,GAAG9G,MACS,qBAAtB8G,EAAU,GAAG9G,MACS,mBAAtB8G,EAAU,GAAG9G,KAIb,MAKFgH,KACEH,GAAaG,EAAsBH,KAErC5E,EAASG,SAAU,GAIrBH,EAASwC,IAAMC,EACbmC,EAAYf,EAAOe,GAAW,GAAGnE,MAAQqE,EAAM,GAAGtC,KAGpDqB,EAAOsB,OAAOP,GAAa5H,EAAO,EAAG,CAAC,OAAQgD,EAAU8E,EAAM,KAC9D9H,IACAC,IAIoB,mBAAlB6H,EAAM,GAAG/G,OACXiC,EAAW,CACTjC,KAAM,WACNoC,SAAS,EACTM,MAAOgC,EAAMqC,EAAM,GAAGrE,QAGxBoD,EAAOsB,OAAOnI,EAAO,EAAG,CAAC,QAASgD,EAAU8E,EAAM,KAClD9H,IACAC,IACA8H,OAAsBnI,EACtBoI,GAAW,GAMjB,OADAnB,EAAOpD,GAAO,GAAGN,QAAU+E,EACpBjI,EAGT,SAAS2D,EAAQwE,EAAK3I,GACpBkC,EAAKyG,GAAO3I,EAGd,SAAS6D,EAAQ8E,GACf,OAAOzG,EAAKyG,GAGd,SAAS3C,EAAM4C,GACb,MAAO,CAACb,KAAMa,EAAEb,KAAMC,OAAQY,EAAEZ,OAAQC,OAAQW,EAAEX,QAGpD,SAASnH,EAAO+H,EAAQC,GACtB,OAEA,SAActF,GACZ5C,EAAMwE,KAAKtB,KAAM+E,EAAOrF,GAAQA,GAC5BsF,GAAKA,EAAI1D,KAAKtB,KAAMN,IAI5B,SAAS3B,IACPiC,KAAKC,MAAM0D,KAAK,CAACnG,KAAM,WAAYC,SAAU,KAG/C,SAASX,EAAMmI,EAAMvF,GAKnB,OAJAM,KAAKC,MAAMD,KAAKC,MAAMvD,OAAS,GAAGe,SAASkG,KAAKsB,GAChDjF,KAAKC,MAAM0D,KAAKsB,GAChBjF,KAAKyD,WAAWE,KAAKjE,GACrBuF,EAAKjD,SAAW,CAAC9B,MAAOgC,EAAMxC,EAAMQ,QAC7B+E,EAGT,SAAS/D,EAAO8D,GACd,OAEA,SAAetF,GACTsF,GAAKA,EAAI1D,KAAKtB,KAAMN,GACxBuB,EAAKK,KAAKtB,KAAMN,IAIpB,SAASuB,EAAKvB,GACZ,IAAIuF,EAAOjF,KAAKC,MAAM8B,MAClBmD,EAAOlF,KAAKyD,WAAW1B,MAE3B,IAAKmD,EACH,MAAM,IAAInB,MACR,iBACErE,EAAMlC,KACN,MACAwG,EAAkB,CAAC9D,MAAOR,EAAMQ,MAAO+B,IAAKvC,EAAMuC,MAClD,oBAEC,GAAIiD,EAAK1H,OAASkC,EAAMlC,KAC7B,MAAM,IAAIuG,MACR,iBACErE,EAAMlC,KACN,MACAwG,EAAkB,CAAC9D,MAAOR,EAAMQ,MAAO+B,IAAKvC,EAAMuC,MAClD,0BACAiD,EAAK1H,KACL,MACAwG,EAAkB,CAAC9D,MAAOgF,EAAKhF,MAAO+B,IAAKiD,EAAKjD,MAChD,aAKN,OADAgD,EAAKjD,SAASC,IAAMC,EAAMxC,EAAMuC,KACzBgD,EAGT,SAAS9C,IACP,OAAOgD,EAASnF,KAAKC,MAAM8B,OA8F7B,SAAS5E,EAAYuC,GACnB,IAAI0F,EAAWpF,KAAKC,MAAMD,KAAKC,MAAMvD,OAAS,GAAGe,SAC7CmE,EAAOwD,EAASA,EAAS1I,OAAS,GAEjCkF,GAAsB,SAAdA,EAAKpE,QAEhBoE,EA+PK,CAACpE,KAAM,OAAQtB,MAAO,KA9PtB8F,SAAW,CAAC9B,MAAOgC,EAAMxC,EAAMQ,QACpCF,KAAKC,MAAMD,KAAKC,MAAMvD,OAAS,GAAGe,SAASkG,KAAK/B,IAGlD5B,KAAKC,MAAM0D,KAAK/B,GAGlB,SAASP,EAAW3B,GAClB,IAAIkC,EAAO5B,KAAKC,MAAM8B,MACtBH,EAAK1F,OAAS8D,KAAKI,eAAeV,GAClCkC,EAAKI,SAASC,IAAMC,EAAMxC,EAAMuC,KAyBlC,SAASS,IACPrC,EAAQ,eAAe,GAuGzB,SAASoB,EAA+B/B,GACtCW,EAAQ,yBAA0BX,EAAMlC,MA4C1C,SAASK,IACP,MAAO,CAACL,KAAM,OAAQ8E,KAAM,KAAMC,KAAM,KAAMrG,MAAO,IAqBvD,SAASoB,IACP,MAAO,CAACE,KAAM,UAAW4D,WAAO/E,EAAWoB,SAAU,IAGvD,SAASuB,IACP,MAAO,CAACxB,KAAM,SAGhB,SAAS2B,IACP,MAAO,CAAC3B,KAAM,OAAQtB,MAAO,IAO/B,SAASe,IACP,MAAO,CAACO,KAAM,OAAQiB,MAAO,KAAMC,IAAK,GAAIjB,SAAU,IAGxD,SAAS8C,EAAKb,GACZ,MAAO,CACLlC,KAAM,OACN6H,QAAwB,gBAAf3F,EAAMlC,KACf0C,MAAO,KACPP,OAAQD,EAAME,QACdnC,SAAU,KAnuBP6H,CAASlJ,EAATkJ,CACLC,EACEC,EAAOpJ,GAASqJ,WAAWC,MAAMC,IAAezJ,EAAOC,GAAU,OAnBvE,IAAIgJ,EAAW,EAAQ,KACnBrB,EAAS,EAAQ,IACjBD,EAAM,EAAQ,IACdrB,EAAsB,EAAQ,IAC9BX,EAAc,EAAQ,KACtB2D,EAAS,EAAQ,KACjBG,EAAe,EAAQ,KACvBJ,EAAc,EAAQ,KACtBzD,EAAS,EAAQ,IACjBkC,EAAoB,EAAQ,IAmxBhC,SAASrH,EAAUJ,EAAQI,GACzB,IAAIkI,EACAe,EAEJ,IAAKf,KAAOlI,EACViJ,EAAO/B,EAAIvC,KAAK/E,EAAQsI,GAAOtI,EAAOsI,GAAQtI,EAAOsI,GAAO,GAEhD,mBAARA,EACFtI,EAAOsI,GAAO,GAAGgB,OAAOD,EAAMjJ,EAAUkI,IAExCiB,OAAOhC,OAAO8B,EAAMjJ,EAAUkI","file":"vendors.mdast-util-from-markdown.8a57b81028f3130ba672.js","sourcesContent":["'use strict'\n\nmodule.exports = require('./dist')\n","'use strict'\n\nmodule.exports = fromMarkdown\n\n// These three are compiled away in the `dist/`\n\nvar toString = require('mdast-util-to-string')\nvar assign = require('micromark/dist/constant/assign')\nvar own = require('micromark/dist/constant/has-own-property')\nvar normalizeIdentifier = require('micromark/dist/util/normalize-identifier')\nvar safeFromInt = require('micromark/dist/util/safe-from-int')\nvar parser = require('micromark/dist/parse')\nvar preprocessor = require('micromark/dist/preprocess')\nvar postprocess = require('micromark/dist/postprocess')\nvar decode = require('parse-entities/decode-entity')\nvar stringifyPosition = require('unist-util-stringify-position')\n\nfunction fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding\n    encoding = undefined\n  }\n\n  return compiler(options)(\n    postprocess(\n      parser(options).document().write(preprocessor()(value, encoding, true))\n    )\n  )\n}\n\n// Note this compiler only understand complete buffering, not streaming.\nfunction compiler(options) {\n  var settings = options || {}\n  var config = configure(\n    {\n      canContainEols: [\n        'emphasis',\n        'fragment',\n        'heading',\n        'paragraph',\n        'strong'\n      ],\n\n      enter: {\n        autolink: opener(link),\n        autolinkProtocol: onenterdata,\n        autolinkEmail: onenterdata,\n        atxHeading: opener(heading),\n        blockQuote: opener(blockQuote),\n        characterEscape: onenterdata,\n        characterReference: onenterdata,\n        codeFenced: opener(codeFlow),\n        codeFencedFenceInfo: buffer,\n        codeFencedFenceMeta: buffer,\n        codeIndented: opener(codeFlow, buffer),\n        codeText: opener(codeText, buffer),\n        codeTextData: onenterdata,\n        data: onenterdata,\n        codeFlowValue: onenterdata,\n        definition: opener(definition),\n        definitionDestinationString: buffer,\n        definitionLabelString: buffer,\n        definitionTitleString: buffer,\n        emphasis: opener(emphasis),\n        hardBreakEscape: opener(hardBreak),\n        hardBreakTrailing: opener(hardBreak),\n        htmlFlow: opener(html, buffer),\n        htmlFlowData: onenterdata,\n        htmlText: opener(html, buffer),\n        htmlTextData: onenterdata,\n        image: opener(image),\n        label: buffer,\n        link: opener(link),\n        listItem: opener(listItem),\n        listItemValue: onenterlistitemvalue,\n        listOrdered: opener(list, onenterlistordered),\n        listUnordered: opener(list),\n        paragraph: opener(paragraph),\n        reference: onenterreference,\n        referenceString: buffer,\n        resourceDestinationString: buffer,\n        resourceTitleString: buffer,\n        setextHeading: opener(heading),\n        strong: opener(strong),\n        thematicBreak: opener(thematicBreak)\n      },\n\n      exit: {\n        atxHeading: closer(),\n        atxHeadingSequence: onexitatxheadingsequence,\n        autolink: closer(),\n        autolinkEmail: onexitautolinkemail,\n        autolinkProtocol: onexitautolinkprotocol,\n        blockQuote: closer(),\n        characterEscapeValue: onexitdata,\n        characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n        characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n        characterReferenceValue: onexitcharacterreferencevalue,\n        codeFenced: closer(onexitcodefenced),\n        codeFencedFence: onexitcodefencedfence,\n        codeFencedFenceInfo: onexitcodefencedfenceinfo,\n        codeFencedFenceMeta: onexitcodefencedfencemeta,\n        codeFlowValue: onexitdata,\n        codeIndented: closer(onexitcodeindented),\n        codeText: closer(onexitcodetext),\n        codeTextData: onexitdata,\n        data: onexitdata,\n        definition: closer(),\n        definitionDestinationString: onexitdefinitiondestinationstring,\n        definitionLabelString: onexitdefinitionlabelstring,\n        definitionTitleString: onexitdefinitiontitlestring,\n        emphasis: closer(),\n        hardBreakEscape: closer(onexithardbreak),\n        hardBreakTrailing: closer(onexithardbreak),\n        htmlFlow: closer(onexithtmlflow),\n        htmlFlowData: onexitdata,\n        htmlText: closer(onexithtmltext),\n        htmlTextData: onexitdata,\n        image: closer(onexitimage),\n        label: onexitlabel,\n        labelText: onexitlabeltext,\n        lineEnding: onexitlineending,\n        link: closer(onexitlink),\n        listItem: closer(),\n        listOrdered: closer(),\n        listUnordered: closer(),\n        paragraph: closer(),\n        referenceString: onexitreferencestring,\n        resourceDestinationString: onexitresourcedestinationstring,\n        resourceTitleString: onexitresourcetitlestring,\n        resource: onexitresource,\n        setextHeading: closer(onexitsetextheading),\n        setextHeadingLineSequence: onexitsetextheadinglinesequence,\n        setextHeadingText: onexitsetextheadingtext,\n        strong: closer(),\n        thematicBreak: closer()\n      }\n    },\n\n    settings.mdastExtensions || []\n  )\n\n  var data = {}\n\n  return compile\n\n  function compile(events) {\n    var stack = [{type: 'root', children: []}]\n    var tokenStack = []\n    var listStack = []\n    var index = -1\n    var handler\n    var listStart\n\n    var context = {\n      stack: stack,\n      tokenStack: tokenStack,\n      config: config,\n      enter: enter,\n      exit: exit,\n      buffer: buffer,\n      resume: resume,\n      setData: setData,\n      getData: getData\n    }\n\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          listStart = listStack.pop(index)\n          index = prepareList(events, listStart, index)\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      handler = config[events[index][0]]\n\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          assign({sliceSerialize: events[index][2].sliceSerialize}, context),\n          events[index][1]\n        )\n      }\n    }\n\n    if (tokenStack.length) {\n      throw new Error(\n        'Cannot close document, a token (`' +\n          tokenStack[tokenStack.length - 1].type +\n          '`, ' +\n          stringifyPosition({\n            start: tokenStack[tokenStack.length - 1].start,\n            end: tokenStack[tokenStack.length - 1].end\n          }) +\n          ') is still open'\n      )\n    }\n\n    // Figure out `root` position.\n    stack[0].position = {\n      start: point(\n        events.length ? events[0][1].start : {line: 1, column: 1, offset: 0}\n      ),\n\n      end: point(\n        events.length\n          ? events[events.length - 2][1].end\n          : {line: 1, column: 1, offset: 0}\n      )\n    }\n\n    return stack[0]\n  }\n\n  function prepareList(events, start, length) {\n    var index = start - 1\n    var containerBalance = -1\n    var listSpread = false\n    var listItem\n    var tailIndex\n    var lineIndex\n    var tailEvent\n    var event\n    var firstBlankLineIndex\n    var atMarker\n\n    while (++index <= length) {\n      event = events[index]\n\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          tailIndex = index\n          lineIndex = undefined\n\n          while (tailIndex--) {\n            tailEvent = events[tailIndex]\n\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = point(\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            _spread: false,\n            start: point(event[1].start)\n          }\n\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  function setData(key, value) {\n    data[key] = value\n  }\n\n  function getData(key) {\n    return data[key]\n  }\n\n  function point(d) {\n    return {line: d.line, column: d.column, offset: d.offset}\n  }\n\n  function opener(create, and) {\n    return open\n\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  function buffer() {\n    this.stack.push({type: 'fragment', children: []})\n  }\n\n  function enter(node, token) {\n    this.stack[this.stack.length - 1].children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push(token)\n    node.position = {start: point(token.start)}\n    return node\n  }\n\n  function closer(and) {\n    return close\n\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  function exit(token) {\n    var node = this.stack.pop()\n    var open = this.tokenStack.pop()\n\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({start: token.start, end: token.end}) +\n          '): it’s not open'\n      )\n    } else if (open.type !== token.type) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({start: token.start, end: token.end}) +\n          '): a different token (`' +\n          open.type +\n          '`, ' +\n          stringifyPosition({start: open.start, end: open.end}) +\n          ') is open'\n      )\n    }\n\n    node.position.end = point(token.end)\n    return node\n  }\n\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      this.stack[this.stack.length - 2].start = parseInt(\n        this.sliceSerialize(token),\n        10\n      )\n\n      setData('expectingFirstListItemValue')\n    }\n  }\n\n  function onexitcodefencedfenceinfo() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].lang = data\n  }\n\n  function onexitcodefencedfencemeta() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].meta = data\n  }\n\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n\n  function onexitcodefenced() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].value = data.replace(\n      /^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g,\n      ''\n    )\n\n    setData('flowCodeInside')\n  }\n\n  function onexitcodeindented() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].value = data\n  }\n\n  function onexitdefinitionlabelstring(token) {\n    // Discard label, use the source content instead.\n    var label = this.resume()\n    this.stack[this.stack.length - 1].label = label\n    this.stack[this.stack.length - 1].identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  function onexitdefinitiontitlestring() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].title = data\n  }\n\n  function onexitdefinitiondestinationstring() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].url = data\n  }\n\n  function onexitatxheadingsequence(token) {\n    if (!this.stack[this.stack.length - 1].depth) {\n      this.stack[this.stack.length - 1].depth = this.sliceSerialize(\n        token\n      ).length\n    }\n  }\n\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n\n  function onexitsetextheadinglinesequence(token) {\n    this.stack[this.stack.length - 1].depth =\n      this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n\n  function onenterdata(token) {\n    var siblings = this.stack[this.stack.length - 1].children\n    var tail = siblings[siblings.length - 1]\n\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      tail.position = {start: point(token.start)}\n      this.stack[this.stack.length - 1].children.push(tail)\n    }\n\n    this.stack.push(tail)\n  }\n\n  function onexitdata(token) {\n    var tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  function onexitlineending(token) {\n    var context = this.stack[this.stack.length - 1]\n\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      context.children[context.children.length - 1].position.end = point(\n        token.end\n      )\n\n      setData('atHardBreak')\n      return\n    }\n\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.indexOf(context.type) > -1\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n\n  function onexithtmlflow() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].value = data\n  }\n\n  function onexithtmltext() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].value = data\n  }\n\n  function onexitcodetext() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].value = data\n  }\n\n  function onexitlink() {\n    var context = this.stack[this.stack.length - 1]\n\n    // To do: clean.\n    if (getData('inReference')) {\n      context.type += 'Reference'\n      context.referenceType = getData('referenceType') || 'shortcut'\n      delete context.url\n      delete context.title\n    } else {\n      delete context.identifier\n      delete context.label\n      delete context.referenceType\n    }\n\n    setData('referenceType')\n  }\n\n  function onexitimage() {\n    var context = this.stack[this.stack.length - 1]\n\n    // To do: clean.\n    if (getData('inReference')) {\n      context.type += 'Reference'\n      context.referenceType = getData('referenceType') || 'shortcut'\n      delete context.url\n      delete context.title\n    } else {\n      delete context.identifier\n      delete context.label\n      delete context.referenceType\n    }\n\n    setData('referenceType')\n  }\n\n  function onexitlabeltext(token) {\n    this.stack[this.stack.length - 2].identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  function onexitlabel() {\n    var fragment = this.stack[this.stack.length - 1]\n    var value = this.resume()\n\n    this.stack[this.stack.length - 1].label = value\n\n    // Assume a reference.\n    setData('inReference', true)\n\n    if (this.stack[this.stack.length - 1].type === 'link') {\n      this.stack[this.stack.length - 1].children = fragment.children\n    } else {\n      this.stack[this.stack.length - 1].alt = value\n    }\n  }\n\n  function onexitresourcedestinationstring() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].url = data\n  }\n\n  function onexitresourcetitlestring() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].title = data\n  }\n\n  function onexitresource() {\n    setData('inReference')\n  }\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n\n  function onexitreferencestring(token) {\n    var label = this.resume()\n    this.stack[this.stack.length - 1].label = label\n    this.stack[this.stack.length - 1].identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n\n  function onexitcharacterreferencevalue(token) {\n    var data = this.sliceSerialize(token)\n    var type = getData('characterReferenceType')\n    var value\n    var tail\n\n    if (type) {\n      value = safeFromInt(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n\n      setData('characterReferenceType')\n    } else {\n      value = decode(data)\n    }\n\n    tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    this.stack[this.stack.length - 1].url = this.sliceSerialize(token)\n  }\n\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    this.stack[this.stack.length - 1].url =\n      'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  function blockQuote() {\n    return {type: 'blockquote', children: []}\n  }\n\n  function codeFlow() {\n    return {type: 'code', lang: null, meta: null, value: ''}\n  }\n\n  function codeText() {\n    return {type: 'inlineCode', value: ''}\n  }\n\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  function emphasis() {\n    return {type: 'emphasis', children: []}\n  }\n\n  function heading() {\n    return {type: 'heading', depth: undefined, children: []}\n  }\n\n  function hardBreak() {\n    return {type: 'break'}\n  }\n\n  function html() {\n    return {type: 'html', value: ''}\n  }\n\n  function image() {\n    return {type: 'image', title: null, url: '', alt: null}\n  }\n\n  function link() {\n    return {type: 'link', title: null, url: '', children: []}\n  }\n\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  function paragraph() {\n    return {type: 'paragraph', children: []}\n  }\n\n  function strong() {\n    return {type: 'strong', children: []}\n  }\n\n  function text() {\n    return {type: 'text', value: ''}\n  }\n\n  function thematicBreak() {\n    return {type: 'thematicBreak'}\n  }\n}\n\nfunction configure(config, extensions) {\n  var index = -1\n\n  while (++index < extensions.length) {\n    extension(config, extensions[index])\n  }\n\n  return config\n}\n\nfunction extension(config, extension) {\n  var key\n  var left\n\n  for (key in extension) {\n    left = own.call(config, key) ? config[key] : (config[key] = {})\n\n    if (key === 'canContainEols') {\n      config[key] = [].concat(left, extension[key])\n    } else {\n      Object.assign(left, extension[key])\n    }\n  }\n}\n"],"sourceRoot":""}