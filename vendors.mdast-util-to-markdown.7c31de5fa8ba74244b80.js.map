{"version":3,"sources":["webpack:///./node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js","webpack:///./node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","webpack:///./node_modules/mdast-util-to-markdown/lib/handle/list-item.js","webpack:///./node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","webpack:///./node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","webpack:///./node_modules/mdast-util-to-markdown/lib/util/container-flow.js","webpack:///./node_modules/mdast-util-to-markdown/lib/util/indent-lines.js","webpack:///./node_modules/mdast-util-to-markdown/lib/configure.js"],"names":["module","exports","parent","context","safeOptions","after","handle","child","children","results","index","before","length","handlers","type","peek","charAt","push","slice","join","inlineCode","node","value","sequence","pad","RegExp","test","size","exit","bullet","checkBullet","listItemIndent","checkListItemIndent","ordered","start","options","incrementListMarker","indexOf","spread","Math","ceil","enter","indentLines","flow","line","blank","repeat","marker","Error","style","between","left","right","result","Number","map","match","eol","exec","one","configure","base","extension","key","extensions","concat","Object","assign"],"mappings":"4EAAAA,EAAOC,QAEP,SAAkBC,EAAQC,EAASC,GACjC,IAIIC,EACAC,EACAC,EANAC,EAAWN,EAAOM,UAAY,GAC9BC,EAAU,GACVC,GAAS,EACTC,EAASP,EAAYO,OAKzB,OAASD,EAAQF,EAASI,QACxBL,EAAQC,EAASE,GAEbA,EAAQ,EAAIF,EAASI,SACvBN,EAASH,EAAQG,OAAOO,SAASL,EAASE,EAAQ,GAAGI,QACvCR,EAAOS,OAAMT,EAASA,EAAOS,MAC3CV,EAAQC,EACJA,EAAOE,EAASE,EAAQ,GAAIR,EAAQC,EAAS,CAC3CQ,OAAQ,GACRN,MAAO,KACNW,OAAO,GACV,IAEJX,EAAQD,EAAYC,MAGtBI,EAAQQ,KACNd,EAAQG,OAAOC,EAAOL,EAAQC,EAAS,CACrCQ,OAAQA,EACRN,MAAOA,KAGXM,EAASF,EAAQA,EAAQG,OAAS,GAAGM,OAAO,GAG9C,OAAOT,EAAQU,KAAK,M,kBCjCtB,SAASC,EAAWC,GAQlB,IAPA,IAAIC,EAAQD,EAAKC,OAAS,GACtBC,EAAW,IACXC,EAAM,GAKH,IAAIC,OAAO,WAAaF,EAAW,YAAYG,KAAKJ,IACzDC,GAAY,IAad,MAPE,WAAWG,KAAKJ,KACf,WAAWI,KAAKJ,EAAMN,OAAO,KAC5B,WAAWU,KAAKJ,EAAMN,OAAOM,EAAMV,OAAS,OAE9CY,EAAM,KAGDD,EAAWC,EAAMF,EAAQE,EAAMD,EAzBxCvB,EAAOC,QAAUmB,EACjBA,EAAWL,KA2BX,WACE,MAAO,M,oBC7BTf,EAAOC,QAQP,SAAkBoB,EAAMnB,EAAQC,GAC9B,IAEIwB,EACAL,EACAM,EAJAC,EAASC,EAAY3B,GACrB4B,EAAiBC,EAAoB7B,GAKrCD,GAAUA,EAAO+B,UACnBJ,GACG3B,EAAOgC,OAAS,EAAIhC,EAAOgC,MAAQ,KACK,IAAxC/B,EAAQgC,QAAQC,oBACb,EACAlC,EAAOM,SAAS6B,QAAQhB,IAC5B,KAGJM,EAAOE,EAAOjB,OAAS,GAGF,QAAnBmB,GACoB,UAAnBA,IAAgC7B,GAAUA,EAAOoC,QAAWjB,EAAKiB,WAElEX,EAA6B,EAAtBY,KAAKC,KAAKb,EAAO,IAO1B,OAJAC,EAAOzB,EAAQsC,MAAM,YACrBnB,EAAQoB,EAAYC,EAAKtB,EAAMlB,IAK/B,SAAayC,EAAMlC,EAAOmC,GACxB,GAAInC,EACF,OAAQmC,EAAQ,GAAKC,EAAO,IAAKnB,IAASiB,EAG5C,OAAQC,EAAQhB,EAASA,EAASiB,EAAO,IAAKnB,EAAOE,EAAOjB,SAAWgC,KATzEhB,IAEON,GAnCT,IAAIwB,EAAS,EAAQ,IACjBhB,EAAc,EAAQ,KACtBE,EAAsB,EAAQ,KAC9BW,EAAO,EAAQ,KACfD,EAAc,EAAQ,M,kBCN1B1C,EAAOC,QAEP,SAAqBE,GACnB,IAAI4C,EAAS5C,EAAQgC,QAAQN,QAAU,IAEvC,GAAe,MAAXkB,GAA6B,MAAXA,GAA6B,MAAXA,EACtC,MAAM,IAAIC,MACR,gCACED,EACA,qDAIN,OAAOA,I,kBCbT/C,EAAOC,QAEP,SAA6BE,GAC3B,IAAI8C,EAAQ9C,EAAQgC,QAAQJ,gBAAkB,MAE9C,GAAc,IAAVkB,GAAyB,MAAVA,EACjB,MAAO,MAGT,GAAc,QAAVA,GAA6B,QAAVA,GAA6B,UAAVA,EACxC,MAAM,IAAID,MACR,gCACEC,EACA,qEAIN,OAAOA,I,oBCjBTjD,EAAOC,QAIP,SAAcC,EAAQC,GACpB,IAGII,EAHAC,EAAWN,EAAOM,UAAY,GAC9BC,EAAU,GACVC,GAAS,EAGb,OAASA,EAAQF,EAASI,QACxBL,EAAQC,EAASE,GAEjBD,EAAQQ,KACNd,EAAQG,OAAOC,EAAOL,EAAQC,EAAS,CAACQ,OAAQ,KAAMN,MAAO,QAG3DK,EAAQ,EAAIF,EAASI,QACvBH,EAAQQ,KAAKiC,EAAQ3C,EAAOC,EAASE,EAAQ,KAIjD,OAAOD,EAAQU,KAAK,IAEpB,SAAS+B,EAAQC,EAAMC,GAIrB,IAHA,IACIC,EADA3C,GAAS,IAGJA,EAAQP,EAAQgB,KAAKP,SAGb,KAFfyC,EAASlD,EAAQgB,KAAKT,GAAOyC,EAAMC,EAAOlD,EAAQC,KAEhB,IAAXkD,GAHa,CAOpC,GAAsB,iBAAXA,EACT,OAAOP,EAAO,KAAM,EAAIQ,OAAOD,IAGjC,IAAe,IAAXA,EACF,MAAO,wBAIX,MAAO,SA1CX,IAAIP,EAAS,EAAQ,K,kBCFrB9C,EAAOC,QAIP,SAAqBqB,EAAOiC,GAC1B,IAGIC,EAHAH,EAAS,GACTnB,EAAQ,EACRU,EAAO,EAGX,KAAQY,EAAQC,EAAIC,KAAKpC,IACvBqC,EAAIrC,EAAMJ,MAAMgB,EAAOsB,EAAM9C,QAC7B2C,EAAOpC,KAAKuC,EAAM,IAClBtB,EAAQsB,EAAM9C,MAAQ8C,EAAM,GAAG5C,OAC/BgC,IAKF,OAFAe,EAAIrC,EAAMJ,MAAMgB,IAETmB,EAAOlC,KAAK,IAEnB,SAASwC,EAAIrC,GACX+B,EAAOpC,KAAKsC,EAAIjC,EAAOsB,GAAOtB,MApBlC,IAAImC,EAAM,a,kBCFVzD,EAAOC,QAEP,SAAS2D,EAAUC,EAAMC,GACvB,IACIC,EADArD,GAAS,EAIb,GAAIoD,EAAUE,WACZ,OAAStD,EAAQoD,EAAUE,WAAWpD,QACpCgD,EAAUC,EAAMC,EAAUE,WAAWtD,IAIzC,IAAKqD,KAAOD,EACE,eAARC,IAEe,WAARA,GAA4B,SAARA,EAC7BF,EAAKE,GAAOF,EAAKE,GAAKE,OAAOH,EAAUC,IAAQ,IAC9B,aAARA,EACTF,EAAKE,GAAOG,OAAOC,OAAON,EAAKE,GAAMD,EAAUC,IAAQ,IAEvDF,EAAK1B,QAAQ4B,GAAOD,EAAUC,IAIlC,OAAOF","file":"vendors.mdast-util-to-markdown.7c31de5fa8ba74244b80.js","sourcesContent":["module.exports = phrasing\n\nfunction phrasing(parent, context, safeOptions) {\n  var children = parent.children || []\n  var results = []\n  var index = -1\n  var before = safeOptions.before\n  var after\n  var handle\n  var child\n\n  while (++index < children.length) {\n    child = children[index]\n\n    if (index + 1 < children.length) {\n      handle = context.handle.handlers[children[index + 1].type]\n      if (handle && handle.peek) handle = handle.peek\n      after = handle\n        ? handle(children[index + 1], parent, context, {\n            before: '',\n            after: ''\n          }).charAt(0)\n        : ''\n    } else {\n      after = safeOptions.after\n    }\n\n    results.push(\n      context.handle(child, parent, context, {\n        before: before,\n        after: after\n      })\n    )\n    before = results[results.length - 1].slice(-1)\n  }\n\n  return results.join('')\n}\n","module.exports = inlineCode\ninlineCode.peek = inlineCodePeek\n\nfunction inlineCode(node) {\n  var value = node.value || ''\n  var sequence = '`'\n  var pad = ''\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs donâ€™t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    (/[ \\r\\n`]/.test(value.charAt(0)) ||\n      /[ \\r\\n`]/.test(value.charAt(value.length - 1)))\n  ) {\n    pad = ' '\n  }\n\n  return sequence + pad + value + pad + sequence\n}\n\nfunction inlineCodePeek() {\n  return '`'\n}\n","module.exports = listItem\n\nvar repeat = require('repeat-string')\nvar checkBullet = require('../util/check-bullet')\nvar checkListItemIndent = require('../util/check-list-item-indent')\nvar flow = require('../util/container-flow')\nvar indentLines = require('../util/indent-lines')\n\nfunction listItem(node, parent, context) {\n  var bullet = checkBullet(context)\n  var listItemIndent = checkListItemIndent(context)\n  var size\n  var value\n  var exit\n\n  if (parent && parent.ordered) {\n    bullet =\n      (parent.start > -1 ? parent.start : 1) +\n      (context.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      '.'\n  }\n\n  size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' && ((parent && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  exit = context.enter('listItem')\n  value = indentLines(flow(node, context), map)\n  exit()\n\n  return value\n\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : repeat(' ', size)) + line\n    }\n\n    return (blank ? bullet : bullet + repeat(' ', size - bullet.length)) + line\n  }\n}\n","module.exports = checkBullet\n\nfunction checkBullet(context) {\n  var marker = context.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","module.exports = checkListItemIndent\n\nfunction checkListItemIndent(context) {\n  var style = context.options.listItemIndent || 'tab'\n\n  if (style === 1 || style === '1') {\n    return 'one'\n  }\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","module.exports = flow\n\nvar repeat = require('repeat-string')\n\nfunction flow(parent, context) {\n  var children = parent.children || []\n  var results = []\n  var index = -1\n  var child\n\n  while (++index < children.length) {\n    child = children[index]\n\n    results.push(\n      context.handle(child, parent, context, {before: '\\n', after: '\\n'})\n    )\n\n    if (index + 1 < children.length) {\n      results.push(between(child, children[index + 1]))\n    }\n  }\n\n  return results.join('')\n\n  function between(left, right) {\n    var index = -1\n    var result\n\n    while (++index < context.join.length) {\n      result = context.join[index](left, right, parent, context)\n\n      if (result === true || result === 1) {\n        break\n      }\n\n      if (typeof result === 'number') {\n        return repeat('\\n', 1 + Number(result))\n      }\n\n      if (result === false) {\n        return '\\n\\n<!---->\\n\\n'\n      }\n    }\n\n    return '\\n\\n'\n  }\n}\n","module.exports = indentLines\n\nvar eol = /\\r?\\n|\\r/g\n\nfunction indentLines(value, map) {\n  var result = []\n  var start = 0\n  var line = 0\n  var match\n\n  while ((match = eol.exec(value))) {\n    one(value.slice(start, match.index))\n    result.push(match[0])\n    start = match.index + match[0].length\n    line++\n  }\n\n  one(value.slice(start))\n\n  return result.join('')\n\n  function one(value) {\n    result.push(map(value, line, !value))\n  }\n}\n","module.exports = configure\n\nfunction configure(base, extension) {\n  var index = -1\n  var key\n\n  // First do subextensions.\n  if (extension.extensions) {\n    while (++index < extension.extensions.length) {\n      configure(base, extension.extensions[index])\n    }\n  }\n\n  for (key in extension) {\n    if (key === 'extensions') {\n      // Empty.\n    } else if (key === 'unsafe' || key === 'join') {\n      base[key] = base[key].concat(extension[key] || [])\n    } else if (key === 'handlers') {\n      base[key] = Object.assign(base[key], extension[key] || {})\n    } else {\n      base.options[key] = extension[key]\n    }\n  }\n\n  return base\n}\n"],"sourceRoot":""}