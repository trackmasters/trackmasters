{"version":3,"sources":["webpack:///./node_modules/micromark/dist/character/markdown-line-ending.js","webpack:///./node_modules/micromark/dist/tokenize/factory-space.js","webpack:///./node_modules/micromark/dist/character/markdown-space.js","webpack:///./node_modules/micromark/dist/util/chunked-splice.js","webpack:///./node_modules/micromark/dist/character/markdown-line-ending-or-space.js","webpack:///./node_modules/micromark/dist/util/regex-check.js","webpack:///./node_modules/micromark/dist/util/shallow.js","webpack:///./node_modules/micromark/dist/constant/assign.js","webpack:///./node_modules/micromark/dist/util/prefix-size.js","webpack:///./node_modules/micromark/dist/character/ascii-alphanumeric.js","webpack:///./node_modules/micromark/dist/constant/from-char-code.js","webpack:///./node_modules/micromark/dist/tokenize/partial-blank-line.js","webpack:///./node_modules/micromark/dist/util/resolve-all.js","webpack:///./node_modules/micromark/dist/character/ascii-alpha.js","webpack:///./node_modules/micromark/dist/util/normalize-identifier.js","webpack:///./node_modules/micromark/dist/util/miniflat.js","webpack:///./node_modules/micromark/dist/util/chunked-push.js","webpack:///./node_modules/micromark/dist/character/ascii-control.js","webpack:///./node_modules/micromark/dist/tokenize/label-end.js","webpack:///./node_modules/micromark/dist/constant/has-own-property.js","webpack:///./node_modules/micromark/dist/util/size-chunks.js","webpack:///./node_modules/micromark/dist/util/subtokenize.js","webpack:///./node_modules/micromark/dist/initialize/text.js","webpack:///./node_modules/micromark/dist/util/combine-extensions.js","webpack:///./node_modules/micromark/dist/util/classify-character.js","webpack:///./node_modules/micromark/dist/character/unicode-punctuation.js","webpack:///./node_modules/micromark/dist/character/unicode-whitespace.js","webpack:///./node_modules/micromark/dist/character/ascii-digit.js","webpack:///./node_modules/micromark/dist/tokenize/factory-destination.js","webpack:///./node_modules/micromark/dist/tokenize/factory-label.js","webpack:///./node_modules/micromark/dist/tokenize/factory-whitespace.js","webpack:///./node_modules/micromark/dist/tokenize/factory-title.js","webpack:///./node_modules/micromark/dist/tokenize/thematic-break.js","webpack:///./node_modules/micromark/dist/util/safe-from-int.js","webpack:///./node_modules/micromark/dist/parse.js","webpack:///./node_modules/micromark/dist/initialize/content.js","webpack:///./node_modules/micromark/dist/initialize/document.js","webpack:///./node_modules/micromark/dist/initialize/flow.js","webpack:///./node_modules/micromark/dist/tokenize/content.js","webpack:///./node_modules/micromark/dist/constant/splice.js","webpack:///./node_modules/micromark/dist/util/create-tokenizer.js","webpack:///./node_modules/micromark/dist/util/serialize-chunks.js","webpack:///./node_modules/micromark/dist/util/slice-chunks.js","webpack:///./node_modules/micromark/dist/constructs.js","webpack:///./node_modules/micromark/dist/tokenize/attention.js","webpack:///./node_modules/micromark/dist/constant/unicode-punctuation-regex.js","webpack:///./node_modules/micromark/dist/util/move-point.js","webpack:///./node_modules/micromark/dist/tokenize/autolink.js","webpack:///./node_modules/micromark/dist/character/ascii-atext.js","webpack:///./node_modules/micromark/dist/tokenize/block-quote.js","webpack:///./node_modules/micromark/dist/tokenize/character-escape.js","webpack:///./node_modules/micromark/dist/character/ascii-punctuation.js","webpack:///./node_modules/micromark/dist/tokenize/character-reference.js","webpack:///./node_modules/micromark/dist/character/ascii-hex-digit.js","webpack:///./node_modules/micromark/dist/tokenize/code-fenced.js","webpack:///./node_modules/micromark/dist/tokenize/code-indented.js","webpack:///./node_modules/micromark/dist/tokenize/code-text.js","webpack:///./node_modules/micromark/dist/tokenize/definition.js","webpack:///./node_modules/micromark/dist/tokenize/hard-break-escape.js","webpack:///./node_modules/micromark/dist/tokenize/heading-atx.js","webpack:///./node_modules/micromark/dist/tokenize/html-flow.js","webpack:///./node_modules/micromark/dist/constant/html-block-names.js","webpack:///./node_modules/micromark/dist/constant/html-raw-names.js","webpack:///./node_modules/micromark/dist/tokenize/html-text.js","webpack:///./node_modules/micromark/dist/tokenize/label-start-image.js","webpack:///./node_modules/micromark/dist/tokenize/label-start-link.js","webpack:///./node_modules/micromark/dist/tokenize/line-ending.js","webpack:///./node_modules/micromark/dist/tokenize/list.js","webpack:///./node_modules/micromark/dist/tokenize/setext-underline.js","webpack:///./node_modules/micromark/dist/preprocess.js","webpack:///./node_modules/micromark/dist/postprocess.js"],"names":["module","exports","code","markdownSpace","effects","ok","type","max","limit","Infinity","size","enter","prefix","consume","exit","splice","list","start","remove","items","parameters","end","length","chunkStart","Array","from","unshift","apply","slice","fromCharCode","regex","test","assign","object","Object","sizeChunks","events","tail","sliceStream","asciiAlphanumeric","regexCheck","String","markdownLineEnding","factorySpace","partialBlankLine","tokenize","nok","partial","constructs","context","resolve","called","index","resolveAll","indexOf","push","asciiAlpha","value","replace","toLowerCase","toUpperCase","chunkedSplice","chunkedPush","normalizeIdentifier","shallow","markdownLineEndingOrSpace","factoryDestination","factoryLabel","factoryWhitespace","factoryTitle","labelEnd","name","labelStart","defined","self","this","_balanced","_inactive","balanced","parser","sliceSerialize","now","afterLabelEnd","attempt","resourceConstruct","fullReferenceConstruct","collapsedReferenceConstruct","resolveTo","group","label","text","token","open","close","media","offset","insideSpan","null","_used","destinationAfter","between","call","afterLabel","own","hasOwnProperty","chunks","subcontent","eventIndex","stream","previous","entered","adjust","startPosition","startPositions","tokenizer","_tokenizer","contentType","childEvents","jumps","gaps","next","defineSkip","isInFirstContentOfListItem","_gfmTasklistFirstContentOfListItem","write","undefined","line","add","pop","event","lineIndex","otherIndex","otherEvent","subevents","more","_container","_movePreviousLineEndings","defineProperty","initializeFactory","string","resolver","createResolver","field","notText","atBreak","data","resolveAllLineSuffixes","extraResolver","chunk","bufferIndex","tabs","charCodeAt","column","_index","_bufferIndex","miniflat","extension","all","hook","left","right","existing","before","extensions","unicodePunctuation","unicodeWhitespace","asciiDigit","asciiControl","literalType","literalMarkerType","rawType","stringType","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","markerType","labelEscape","seen","marker","atFirstTitleBreak","atTitleBreak","title","titleEscape","thematicBreak","sequence","base","parseInt","content","document","flow","combineExtensions","createTokenizer","options","concat","create","initializer","contentStart","contentInitial","lineStart","inspectResult","childFlow","childToken","stack","continued","inspectConstruct","subcontinued","inspectStart","containerState","continuation","inspectContinue","inspectLess","currentConstruct","concrete","flowContinue","inspectDone","interrupt","interruptible","containerConstruct","inspectFlowEnd","_closeFlow","lazy","lazyFlowConstruct","check","inspectLazy","flowEnd","documentContinue","documentContinued","flowStart","containerContinue","exitContainers","continueFlow","documentAfterPeek","disable","initial","flowInitial","afterConstruct","prefixSize","subtokenize","contentEnd","continuationConstruct","contentContinue","prefixed","serializeChunks","sliceChunks","initialize","point","columnStart","resolveAllConstructs","accountForPotentialSkip","fields","constructFactory","construct","info","addResult","onsuccessfulcheck","main","state","chunkIndex","go","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","atTab","result","join","view","startIndex","startBufferIndex","endIndex","endBufferIndex","text$1","attention","autolink","blockQuote","characterEscape","characterReference","codeFenced","codeIndented","codeText","definition","hardBreakEscape","headingAtx","htmlFlow","htmlText","labelStartImage","labelStartLink","lineEnding","setextUnderline","42","43","45","48","49","50","51","52","53","54","55","56","57","62","91","32","35","60","61","95","96","126","38","92","33","93","classifyCharacter","movePoint","after","_open","_close","openingSequence","closingSequence","use","nextEvents","asciiAtext","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","asciiPunctuation","decodeEntity","asciiHexDigit","_interopDefaultLegacy","e","default","decodeEntity__default","numeric","closingFenceConstruct","sizeOpen","closingSequenceEnd","initialPrefix","sequenceOpen","infoOpen","openAfter","infoAfter","meta","indentedContentConstruct","afterPrefix","gap","tailExitIndex","headEnterIndex","identifier","labelAfter","titleConstruct","fenceOpenInside","headingBreak","htmlBlockNames","htmlRawNames","kind","startTag","buffer","declarationStart","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","nextBlankConstruct","htmlContinueStart","done","continuationRawEndTag","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","declaration","commentStart","commentStartDash","comment","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","initialSize","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","furtherBlankLines","notInCurrentItem","indentConstruct","paragraph","heading","search","atCarriageReturn","encoding","match","endPosition","toString","lastIndex","exec","Math","ceil"],"mappings":"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","file":"vendors.micromark.6d9fd56b004764b5cbf2.js","sourcesContent":["'use strict'\n\nfunction markdownLineEnding(code) {\n  return code < -2\n}\n\nmodule.exports = markdownLineEnding\n","'use strict'\n\nvar markdownSpace = require('../character/markdown-space.js')\n\nfunction spaceFactory(effects, ok, type, max) {\n  var limit = max ? max - 1 : Infinity\n  var size = 0\n  return start\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n\nmodule.exports = spaceFactory\n","'use strict'\n\nfunction markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\nmodule.exports = markdownSpace\n","'use strict'\n\nvar splice = require('../constant/splice.js')\n\n// causes a stack overflow in V8 when trying to insert 100k items for instance.\n\nfunction chunkedSplice(list, start, remove, items) {\n  var end = list.length\n  var chunkStart = 0\n  var parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\nmodule.exports = chunkedSplice\n","'use strict'\n\nfunction markdownLineEndingOrSpace(code) {\n  return code < 0 || code === 32\n}\n\nmodule.exports = markdownLineEndingOrSpace\n","'use strict'\n\nvar fromCharCode = require('../constant/from-char-code.js')\n\nfunction regexCheck(regex) {\n  return check\n\n  function check(code) {\n    return regex.test(fromCharCode(code))\n  }\n}\n\nmodule.exports = regexCheck\n","'use strict'\n\nvar assign = require('../constant/assign.js')\n\nfunction shallow(object) {\n  return assign({}, object)\n}\n\nmodule.exports = shallow\n","'use strict'\n\nvar assign = Object.assign\n\nmodule.exports = assign\n","'use strict'\n\nvar sizeChunks = require('./size-chunks.js')\n\nfunction prefixSize(events, type) {\n  var tail = events[events.length - 1]\n  if (!tail || tail[1].type !== type) return 0\n  return sizeChunks(tail[2].sliceStream(tail[1]))\n}\n\nmodule.exports = prefixSize\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\nmodule.exports = asciiAlphanumeric\n","'use strict'\n\nvar fromCharCode = String.fromCharCode\n\nmodule.exports = fromCharCode\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('./factory-space.js')\n\nvar partialBlankLine = {\n  tokenize: tokenizePartialBlankLine,\n  partial: true\n}\n\nfunction tokenizePartialBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n\nmodule.exports = partialBlankLine\n","'use strict'\n\nfunction resolveAll(constructs, events, context) {\n  var called = []\n  var index = -1\n  var resolve\n\n  while (++index < constructs.length) {\n    resolve = constructs[index].resolveAll\n\n    if (resolve && called.indexOf(resolve) < 0) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n\nmodule.exports = resolveAll\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiAlpha = regexCheck(/[A-Za-z]/)\n\nmodule.exports = asciiAlpha\n","'use strict'\n\nfunction normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no object method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n\nmodule.exports = normalizeIdentifier\n","'use strict'\n\nfunction miniflat(value) {\n  return value === null || value === undefined\n    ? []\n    : 'length' in value\n    ? value\n    : [value]\n}\n\nmodule.exports = miniflat\n","'use strict'\n\nvar chunkedSplice = require('./chunked-splice.js')\n\nfunction chunkedPush(list, items) {\n  if (list.length) {\n    chunkedSplice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n\nmodule.exports = chunkedPush\n","'use strict'\n\n// Note: EOF is seen as ASCII control here, because `null < 32 == true`.\nfunction asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code < 32 || code === 127\n  )\n}\n\nmodule.exports = asciiControl\n","'use strict'\n\nvar chunkedSplice = require('../util/chunked-splice.js')\nvar chunkedPush = require('../util/chunked-push.js')\nvar normalizeIdentifier = require('../util/normalize-identifier.js')\nvar shallow = require('../util/shallow.js')\nvar resolveAll = require('../util/resolve-all.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar factoryDestination = require('./factory-destination.js')\nvar factoryLabel = require('./factory-label.js')\nvar factoryWhitespace = require('./factory-whitespace.js')\nvar factoryTitle = require('./factory-title.js')\n\nvar labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\nvar resourceConstruct = {\n  tokenize: tokenizeResource\n}\nvar fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\nvar collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n\nfunction resolveAllLabelEnd(events) {\n  var index = -1\n  var token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      !token._used &&\n      (token.type === 'labelImage' ||\n        token.type === 'labelLink' ||\n        token.type === 'labelEnd')\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n\nfunction resolveToLabelEnd(events, context) {\n  var index = events.length\n  var offset = 0\n  var group\n  var label\n  var text\n  var token\n  var open\n  var close\n  var media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: shallow(events[open][1].start),\n    end: shallow(events[events.length - 1][1].end)\n  }\n  label = {\n    type: 'label',\n    start: shallow(events[open][1].start),\n    end: shallow(events[close][1].end)\n  }\n  text = {\n    type: 'labelText',\n    start: shallow(events[open + offset + 2][1].end),\n    end: shallow(events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = chunkedPush(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = chunkedPush(media, [['enter', text, context]]) // Between.\n\n  media = chunkedPush(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = chunkedPush(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = chunkedPush(media, events.slice(close + 1)) // Media close.\n\n  media = chunkedPush(media, [['exit', group, context]])\n  chunkedSplice(events, open, events.length, media)\n  return events\n}\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  var self = this\n  var index = self.events.length\n  var labelStart\n  var defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined =\n      self.parser.defined.indexOf(\n        normalizeIdentifier(\n          self.sliceSerialize({\n            start: labelStart.end,\n            end: self.now()\n          })\n        )\n      ) > -1\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      3\n    )(code)\n  }\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  var self = this\n  return start\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n\n  function afterLabel(code) {\n    return self.parser.defined.indexOf(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    ) < 0\n      ? nok(code)\n      : ok(code)\n  }\n}\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = labelEnd\n","'use strict'\n\nvar own = {}.hasOwnProperty\n\nmodule.exports = own\n","'use strict'\n\n// Counts tabs based on their expanded size, and CR+LF as one character.\n\nfunction sizeChunks(chunks) {\n  var index = -1\n  var size = 0\n\n  while (++index < chunks.length) {\n    size += typeof chunks[index] === 'string' ? chunks[index].length : 1\n  }\n\n  return size\n}\n\nmodule.exports = sizeChunks\n","'use strict'\n\nvar assign = require('../constant/assign.js')\nvar chunkedSplice = require('./chunked-splice.js')\nvar shallow = require('./shallow.js')\n\nfunction subtokenize(events) {\n  var jumps = {}\n  var index = -1\n  var event\n  var lineIndex\n  var otherIndex\n  var otherEvent\n  var parameters\n  var subevents\n  var more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1].isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container || event[1]._movePreviousLineEndings) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = shallow(events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        chunkedSplice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n\nfunction subcontent(events, eventIndex) {\n  var token = events[eventIndex][1]\n  var context = events[eventIndex][2]\n  var startPosition = eventIndex - 1\n  var startPositions = []\n  var tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  var childEvents = tokenizer.events\n  var jumps = []\n  var gaps = {}\n  var stream\n  var previous\n  var index\n  var entered\n  var end\n  var adjust // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (token) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== token) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!token._tokenizer) {\n      stream = context.sliceStream(token)\n\n      if (!token.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(token.start)\n      }\n\n      if (token.isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (token.isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = token\n    token = token.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  token = previous\n  index = childEvents.length\n\n  while (index--) {\n    // Make sure we’ve at least seen something (final eol is part of the last\n    // token).\n    if (childEvents[index][0] === 'enter') {\n      entered = true\n    } else if (\n      // Find a void token that includes a break.\n      entered &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      add(childEvents.slice(index + 1, end))\n      // Help GC.\n      token._tokenizer = token.next = undefined\n      token = token.previous\n      end = index + 1\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = token._tokenizer = token.next = undefined // Do head:\n\n  add(childEvents.slice(0, end))\n  index = -1\n  adjust = 0\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n\n  function add(slice) {\n    var start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    chunkedSplice(events, start, 2, slice)\n  }\n}\n\nmodule.exports = subtokenize\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar assign = require('../constant/assign.js')\nvar shallow = require('../util/shallow.js')\n\nvar text = initializeFactory('text')\nvar string = initializeFactory('string')\nvar resolver = {\n  resolveAll: createResolver()\n}\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n\n  function initializeText(effects) {\n    var self = this\n    var constructs = this.parser.constructs[field]\n    var text = effects.attempt(constructs, start, notText)\n    return start\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n\n    function atBreak(code) {\n      var list = constructs[code]\n      var index = -1\n\n      if (code === null) {\n        return true\n      }\n\n      if (list) {\n        while (++index < list.length) {\n          if (\n            !list[index].previous ||\n            list[index].previous.call(self, self.previous)\n          ) {\n            return true\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n\n  function resolveAllText(events, context) {\n    var index = -1\n    var enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n} // A rather ugly set of instructions which again looks at chunks in the input\n// stream.\n// The reason to do this here is that it is *much* faster to parse in reverse.\n// And that we can’t hook into `null` to split the line suffix before an EOF.\n// To do: figure out if we can make this into a clean utility, or even in core.\n// As it will be useful for GFMs literal autolink extension (and maybe even\n// tables?)\n\nfunction resolveAllLineSuffixes(events, context) {\n  var eventIndex = -1\n  var chunks\n  var data\n  var chunk\n  var index\n  var bufferIndex\n  var size\n  var tabs\n  var token\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      data = events[eventIndex - 1][1]\n      chunks = context.sliceStream(data)\n      index = chunks.length\n      bufferIndex = -1\n      size = 0\n      tabs = undefined\n\n      while (index--) {\n        chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1);\n        else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: shallow(data.end)\n        }\n        data.end = shallow(token.start)\n\n        if (data.start.offset === data.end.offset) {\n          assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n\nexports.resolver = resolver\nexports.string = string\nexports.text = text\n","'use strict'\n\nvar hasOwnProperty = require('../constant/has-own-property.js')\nvar chunkedSplice = require('./chunked-splice.js')\nvar miniflat = require('./miniflat.js')\n\nfunction combineExtensions(extensions) {\n  var all = {}\n  var index = -1\n\n  while (++index < extensions.length) {\n    extension(all, extensions[index])\n  }\n\n  return all\n}\n\nfunction extension(all, extension) {\n  var hook\n  var left\n  var right\n  var code\n\n  for (hook in extension) {\n    left = hasOwnProperty.call(all, hook) ? all[hook] : (all[hook] = {})\n    right = extension[hook]\n\n    for (code in right) {\n      left[code] = constructs(\n        miniflat(right[code]),\n        hasOwnProperty.call(left, code) ? left[code] : []\n      )\n    }\n  }\n}\n\nfunction constructs(list, existing) {\n  var index = -1\n  var before = []\n\n  while (++index < list.length) {\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  chunkedSplice(existing, 0, 0, before)\n  return existing\n}\n\nmodule.exports = combineExtensions\n","'use strict'\n\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar unicodePunctuation = require('../character/unicode-punctuation.js')\nvar unicodeWhitespace = require('../character/unicode-whitespace.js')\n\n// Classify whether a character is unicode whitespace, unicode punctuation, or\n// anything else.\n// Used for attention (emphasis, strong), whose sequences can open or close\n// based on the class of surrounding characters.\nfunction classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n\nmodule.exports = classifyCharacter\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\nvar unicodePunctuationRegex = require('../constant/unicode-punctuation-regex.js')\n\n// In fact adds to the bundle size.\n\nvar unicodePunctuation = regexCheck(unicodePunctuationRegex)\n\nmodule.exports = unicodePunctuation\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar unicodeWhitespace = regexCheck(/\\s/)\n\nmodule.exports = unicodeWhitespace\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiDigit = regexCheck(/\\d/)\n\nmodule.exports = asciiDigit\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar asciiControl = require('../character/ascii-control.js')\n\n// eslint-disable-next-line max-params\nfunction destinationFactory(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  var limit = max || Infinity\n  var balance = 0\n  return start\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n\nmodule.exports = destinationFactory\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownSpace = require('../character/markdown-space.js')\n\n// eslint-disable-next-line max-params\nfunction labelFactory(effects, ok, nok, type, markerType, stringType) {\n  var self = this\n  var size = 0\n  var data\n  return start\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* c8 ignore next */\n      (code === 94 &&\n        /* c8 ignore next */\n        !size &&\n        /* c8 ignore next */\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n\nmodule.exports = labelFactory\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar factorySpace = require('./factory-space.js')\n\nfunction whitespaceFactory(effects, ok) {\n  var seen\n  return start\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n\nmodule.exports = whitespaceFactory\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('./factory-space.js')\n\nfunction titleFactory(effects, ok, nok, type, markerType, stringType) {\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n\nmodule.exports = titleFactory\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar factorySpace = require('./factory-space.js')\n\nvar thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  var size = 0\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n\nmodule.exports = thematicBreak\n","'use strict'\n\nvar fromCharCode = require('../constant/from-char-code.js')\n\nfunction safeFromInt(value, base) {\n  var code = parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return fromCharCode(code)\n}\n\nmodule.exports = safeFromInt\n","'use strict'\n\nvar miniflat = require('./util/miniflat.js')\nvar content = require('./initialize/content.js')\nvar document = require('./initialize/document.js')\nvar flow = require('./initialize/flow.js')\nvar text = require('./initialize/text.js')\nvar combineExtensions = require('./util/combine-extensions.js')\nvar createTokenizer = require('./util/create-tokenizer.js')\nvar constructs = require('./constructs.js')\n\nfunction parse(options) {\n  var settings = options || {}\n  var parser = {\n    defined: [],\n    constructs: combineExtensions(\n      [constructs].concat(miniflat(settings.extensions))\n    ),\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(text.string),\n    text: create(text.text)\n  }\n  return parser\n\n  function create(initializer) {\n    return creator\n\n    function creator(from) {\n      return createTokenizer(parser, initializer, from)\n    }\n  }\n}\n\nmodule.exports = parse\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('../tokenize/factory-space.js')\n\nvar tokenize = initializeContent\n\nfunction initializeContent(effects) {\n  var contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  var previous\n  return contentStart\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n\n  function lineStart(code) {\n    var token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous: previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n\nexports.tokenize = tokenize\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('../tokenize/factory-space.js')\nvar partialBlankLine = require('../tokenize/partial-blank-line.js')\n\nvar tokenize = initializeDocument\nvar containerConstruct = {\n  tokenize: tokenizeContainer\n}\nvar lazyFlowConstruct = {\n  tokenize: tokenizeLazyFlow\n}\n\nfunction initializeDocument(effects) {\n  var self = this\n  var stack = []\n  var continued = 0\n  var inspectConstruct = {\n    tokenize: tokenizeInspect,\n    partial: true\n  }\n  var inspectResult\n  var childFlow\n  var childToken\n  return start\n\n  function start(code) {\n    if (continued < stack.length) {\n      self.containerState = stack[continued][1]\n      return effects.attempt(\n        stack[continued][0].continuation,\n        documentContinue,\n        documentContinued\n      )(code)\n    }\n\n    return documentContinued(code)\n  }\n\n  function documentContinue(code) {\n    continued++\n    return start(code)\n  }\n\n  function documentContinued(code) {\n    // If we’re in a concrete construct (such as when expecting another line of\n    // HTML, or we resulted in lazy content), we can immediately start flow.\n    if (inspectResult && inspectResult.flowContinue) {\n      return flowStart(code)\n    }\n\n    self.interrupt =\n      childFlow &&\n      childFlow.currentConstruct &&\n      childFlow.currentConstruct.interruptible\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n\n  function containerContinue(code) {\n    stack.push([self.currentConstruct, self.containerState])\n    self.containerState = undefined\n    return documentContinued(code)\n  }\n\n  function flowStart(code) {\n    if (code === null) {\n      exitContainers(0, true)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n\n  function flowContinue(code) {\n    if (code === null) {\n      continueFlow(effects.exit('chunkFlow'))\n      return flowStart(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      continueFlow(effects.exit('chunkFlow'))\n      return effects.check(inspectConstruct, documentAfterPeek)\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n\n  function documentAfterPeek(code) {\n    exitContainers(\n      inspectResult.continued,\n      inspectResult && inspectResult.flowEnd\n    )\n    continued = 0\n    return start(code)\n  }\n\n  function continueFlow(token) {\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.lazy = inspectResult && inspectResult.lazy\n    childFlow.defineSkip(token.start)\n    childFlow.write(self.sliceStream(token))\n  }\n\n  function exitContainers(size, end) {\n    var index = stack.length // Close the flow.\n\n    if (childFlow && end) {\n      childFlow.write([null])\n      childToken = childFlow = undefined\n    } // Exit open containers.\n\n    while (index-- > size) {\n      self.containerState = stack[index][1]\n      stack[index][0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function tokenizeInspect(effects, ok) {\n    var subcontinued = 0\n    inspectResult = {}\n    return inspectStart\n\n    function inspectStart(code) {\n      if (subcontinued < stack.length) {\n        self.containerState = stack[subcontinued][1]\n        return effects.attempt(\n          stack[subcontinued][0].continuation,\n          inspectContinue,\n          inspectLess\n        )(code)\n      } // If we’re continued but in a concrete flow, we can’t have more\n      // containers.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        inspectResult.flowContinue = true\n        return inspectDone(code)\n      }\n\n      self.interrupt =\n        childFlow.currentConstruct && childFlow.currentConstruct.interruptible\n      self.containerState = {}\n      return effects.attempt(\n        containerConstruct,\n        inspectFlowEnd,\n        inspectDone\n      )(code)\n    }\n\n    function inspectContinue(code) {\n      subcontinued++\n      return self.containerState._closeFlow\n        ? inspectFlowEnd(code)\n        : inspectStart(code)\n    }\n\n    function inspectLess(code) {\n      if (childFlow.currentConstruct && childFlow.currentConstruct.lazy) {\n        // Maybe another container?\n        self.containerState = {}\n        return effects.attempt(\n          containerConstruct,\n          inspectFlowEnd, // Maybe flow, or a blank line?\n          effects.attempt(\n            lazyFlowConstruct,\n            inspectFlowEnd,\n            effects.check(partialBlankLine, inspectFlowEnd, inspectLazy)\n          )\n        )(code)\n      } // Otherwise we’re interrupting.\n\n      return inspectFlowEnd(code)\n    }\n\n    function inspectLazy(code) {\n      // Act as if all containers are continued.\n      subcontinued = stack.length\n      inspectResult.lazy = true\n      inspectResult.flowContinue = true\n      return inspectDone(code)\n    } // We’re done with flow if we have more containers, or an interruption.\n\n    function inspectFlowEnd(code) {\n      inspectResult.flowEnd = true\n      return inspectDone(code)\n    }\n\n    function inspectDone(code) {\n      inspectResult.continued = subcontinued\n      self.interrupt = self.containerState = undefined\n      return ok(code)\n    }\n  }\n}\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.indexOf('codeIndented') > -1\n      ? undefined\n      : 4\n  )\n}\n\nfunction tokenizeLazyFlow(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.lazy(this.parser.constructs.flow, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.indexOf('codeIndented') > -1\n      ? undefined\n      : 4\n  )\n}\n\nexports.tokenize = tokenize\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar factorySpace = require('../tokenize/factory-space.js')\nvar partialBlankLine = require('../tokenize/partial-blank-line.js')\nvar content = require('../tokenize/content.js')\n\nvar tokenize = initializeFlow\n\nfunction initializeFlow(effects) {\n  var self = this\n  var initial = effects.attempt(\n    // Try to parse a blank line.\n    partialBlankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n\nexports.tokenize = tokenize\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('./factory-space.js')\nvar prefixSize = require('../util/prefix-size.js')\nvar subtokenize = require('../util/subtokenize.js')\n\n// No name because it must not be turned off.\nvar content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent,\n  interruptible: true,\n  lazy: true\n}\nvar continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n} // Content is transparent: it’s parsed right now. That way, definitions are also\n// parsed right now: before text in paragraphs (specifically, media) are parsed.\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n\nfunction tokenizeContent(effects, ok) {\n  var previous\n  return start\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous = previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous: previous\n    })\n    return data\n  }\n}\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  var self = this\n  return startLookahead\n\n  function startLookahead(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (\n      self.parser.constructs.disable.null.indexOf('codeIndented') > -1 ||\n      prefixSize(self.events, 'linePrefix') < 4\n    ) {\n      return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n    }\n\n    return ok(code)\n  }\n}\n\nmodule.exports = content\n","'use strict'\n\nvar splice = [].splice\n\nmodule.exports = splice\n","'use strict'\n\nvar assign = require('../constant/assign.js')\nvar chunkedSplice = require('./chunked-splice.js')\nvar chunkedPush = require('./chunked-push.js')\nvar miniflat = require('./miniflat.js')\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar shallow = require('./shallow.js')\nvar resolveAll = require('./resolve-all.js')\nvar serializeChunks = require('./serialize-chunks.js')\nvar sliceChunks = require('./slice-chunks.js')\n\n// Create a tokenizer.\n// Tokenizers deal with one type of data (e.g., containers, flow, text).\n// The parser is the object dealing with it all.\n// `initialize` works like other constructs, except that only its `tokenize`\n// function is used, in which case it doesn’t receive an `ok` or `nok`.\n// `from` can be given to set the point before the first character, although\n// when further lines are indented, they must be set with `defineSkip`.\nfunction createTokenizer(parser, initialize, from) {\n  var point = from\n    ? shallow(from)\n    : {\n        line: 1,\n        column: 1,\n        offset: 0\n      }\n  var columnStart = {}\n  var resolveAllConstructs = []\n  var chunks = []\n  var stack = []\n\n  var effects = {\n    consume: consume,\n    enter: enter,\n    exit: exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    }),\n    lazy: constructFactory(onsuccessfulcheck, {\n      lazy: true\n    })\n  } // State and tools for resolving and serializing.\n\n  var context = {\n    previous: null,\n    events: [],\n    parser: parser,\n    sliceStream: sliceStream,\n    sliceSerialize: sliceSerialize,\n    now: now,\n    defineSkip: skip,\n    write: write\n  } // The state function.\n\n  var state = initialize.tokenize.call(context, effects) // Track which character we expect to be consumed, to catch bugs.\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  } // Store where we are in the input stream.\n\n  point._index = 0\n  point._bufferIndex = -1\n  return context\n\n  function write(slice) {\n    chunks = chunkedPush(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  function sliceSerialize(token) {\n    return serializeChunks(sliceStream(token))\n  }\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n\n  function now() {\n    return shallow(point)\n  }\n\n  function skip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n  // Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n  // `consume`).\n  // Here is where we walk through the chunks, which either include strings of\n  // several characters, or numerical character codes.\n  // The reason to do this in a loop instead of a call is so the stack can\n  // drain.\n\n  function main() {\n    var chunkIndex\n    var chunk\n\n    while (point._index < chunks.length) {\n      chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  } // Deal with one code.\n\n  function go(code) {\n    state = state(code)\n  } // Move a character forward.\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n  } // Start a token.\n\n  function enter(type, fields) {\n    var token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  } // Stop a token.\n\n  function exit(type) {\n    var token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  } // Use results.\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  } // Discard results.\n\n  function onsuccessfulcheck(construct, info) {\n    info.restore()\n  } // Factory to attempt/check/interrupt.\n\n  function constructFactory(onreturn, fields) {\n    return hook // Handle either an object mapping codes to constructs, a list of\n    // constructs, or a single construct.\n\n    function hook(constructs, returnState, bogusState) {\n      var listOfConstructs\n      var constructIndex\n      var currentConstruct\n      var info\n      return constructs.tokenize || 'length' in constructs\n        ? handleListOfConstructs(miniflat(constructs))\n        : handleMapOfConstructs\n\n      function handleMapOfConstructs(code) {\n        if (code in constructs || null in constructs) {\n          return handleListOfConstructs(\n            constructs.null\n              ? /* c8 ignore next */\n                miniflat(constructs[code]).concat(miniflat(constructs.null))\n              : constructs[code]\n          )(code)\n        }\n\n        return bogusState(code)\n      }\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n        return handleConstruct(list[constructIndex])\n      }\n\n      function handleConstruct(construct) {\n        return start\n\n        function start(code) {\n          // To do: not nede to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.indexOf(construct.name) > -1\n          ) {\n            return nok()\n          }\n\n          return construct.tokenize.call(\n            fields ? assign({}, context, fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n\n      function ok(code) {\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n\n      function nok(code) {\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && resolveAllConstructs.indexOf(construct) < 0) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      chunkedSplice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n\n  function store() {\n    var startPoint = now()\n    var startPrevious = context.previous\n    var startCurrentConstruct = context.currentConstruct\n    var startEventsIndex = context.events.length\n    var startStack = Array.from(stack)\n    return {\n      restore: restore,\n      from: startEventsIndex\n    }\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n\nmodule.exports = createTokenizer\n","'use strict'\n\nvar fromCharCode = require('../constant/from-char-code.js')\n\nfunction serializeChunks(chunks) {\n  var index = -1\n  var result = []\n  var chunk\n  var value\n  var atTab\n\n  while (++index < chunks.length) {\n    chunk = chunks[index]\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else if (chunk === -5) {\n      value = '\\r'\n    } else if (chunk === -4) {\n      value = '\\n'\n    } else if (chunk === -3) {\n      value = '\\r' + '\\n'\n    } else if (chunk === -2) {\n      value = '\\t'\n    } else if (chunk === -1) {\n      if (atTab) continue\n      value = ' '\n    } else {\n      // Currently only replacement character.\n      value = fromCharCode(chunk)\n    }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n\nmodule.exports = serializeChunks\n","'use strict'\n\nfunction sliceChunks(chunks, token) {\n  var startIndex = token.start._index\n  var startBufferIndex = token.start._bufferIndex\n  var endIndex = token.end._index\n  var endBufferIndex = token.end._bufferIndex\n  var view\n\n  if (startIndex === endIndex) {\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n\nmodule.exports = sliceChunks\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar text$1 = require('./initialize/text.js')\nvar attention = require('./tokenize/attention.js')\nvar autolink = require('./tokenize/autolink.js')\nvar blockQuote = require('./tokenize/block-quote.js')\nvar characterEscape = require('./tokenize/character-escape.js')\nvar characterReference = require('./tokenize/character-reference.js')\nvar codeFenced = require('./tokenize/code-fenced.js')\nvar codeIndented = require('./tokenize/code-indented.js')\nvar codeText = require('./tokenize/code-text.js')\nvar definition = require('./tokenize/definition.js')\nvar hardBreakEscape = require('./tokenize/hard-break-escape.js')\nvar headingAtx = require('./tokenize/heading-atx.js')\nvar htmlFlow = require('./tokenize/html-flow.js')\nvar htmlText = require('./tokenize/html-text.js')\nvar labelEnd = require('./tokenize/label-end.js')\nvar labelStartImage = require('./tokenize/label-start-image.js')\nvar labelStartLink = require('./tokenize/label-start-link.js')\nvar lineEnding = require('./tokenize/line-ending.js')\nvar thematicBreak = require('./tokenize/thematic-break.js')\nvar list = require('./tokenize/list.js')\nvar setextUnderline = require('./tokenize/setext-underline.js')\n\nvar document = {\n  42: list,\n  // Asterisk\n  43: list,\n  // Plus sign\n  45: list,\n  // Dash\n  48: list,\n  // 0\n  49: list,\n  // 1\n  50: list,\n  // 2\n  51: list,\n  // 3\n  52: list,\n  // 4\n  53: list,\n  // 5\n  54: list,\n  // 6\n  55: list,\n  // 7\n  56: list,\n  // 8\n  57: list,\n  // 9\n  62: blockQuote // Greater than\n}\nvar contentInitial = {\n  91: definition // Left square bracket\n}\nvar flowInitial = {\n  '-2': codeIndented,\n  // Horizontal tab\n  '-1': codeIndented,\n  // Virtual space\n  32: codeIndented // Space\n}\nvar flow = {\n  35: headingAtx,\n  // Number sign\n  42: thematicBreak,\n  // Asterisk\n  45: [setextUnderline, thematicBreak],\n  // Dash\n  60: htmlFlow,\n  // Less than\n  61: setextUnderline,\n  // Equals to\n  95: thematicBreak,\n  // Underscore\n  96: codeFenced,\n  // Grave accent\n  126: codeFenced // Tilde\n}\nvar string = {\n  38: characterReference,\n  // Ampersand\n  92: characterEscape // Backslash\n}\nvar text = {\n  '-5': lineEnding,\n  // Carriage return\n  '-4': lineEnding,\n  // Line feed\n  '-3': lineEnding,\n  // Carriage return + line feed\n  33: labelStartImage,\n  // Exclamation mark\n  38: characterReference,\n  // Ampersand\n  42: attention,\n  // Asterisk\n  60: [autolink, htmlText],\n  // Less than\n  91: labelStartLink,\n  // Left square bracket\n  92: [hardBreakEscape, characterEscape],\n  // Backslash\n  93: labelEnd,\n  // Right square bracket\n  95: attention,\n  // Underscore\n  96: codeText // Grave accent\n}\nvar insideSpan = {\n  null: [attention, text$1.resolver]\n}\nvar disable = {\n  null: []\n}\n\nexports.contentInitial = contentInitial\nexports.disable = disable\nexports.document = document\nexports.flow = flow\nexports.flowInitial = flowInitial\nexports.insideSpan = insideSpan\nexports.string = string\nexports.text = text\n","'use strict'\n\nvar chunkedSplice = require('../util/chunked-splice.js')\nvar chunkedPush = require('../util/chunked-push.js')\nvar shallow = require('../util/shallow.js')\nvar resolveAll = require('../util/resolve-all.js')\nvar classifyCharacter = require('../util/classify-character.js')\nvar movePoint = require('../util/move-point.js')\n\nvar attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n\nfunction resolveAllAttention(events, context) {\n  var index = -1\n  var open\n  var group\n  var text\n  var openingSequence\n  var closingSequence\n  var use\n  var nextEvents\n  var offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: movePoint(shallow(events[open][1].end), -use),\n            end: shallow(events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: shallow(events[index][1].start),\n            end: movePoint(shallow(events[index][1].start), use)\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: shallow(events[open][1].end),\n            end: shallow(events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: shallow(openingSequence.start),\n            end: shallow(closingSequence.end)\n          }\n          events[open][1].end = shallow(openingSequence.start)\n          events[index][1].start = shallow(closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = chunkedPush(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = chunkedPush(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = chunkedPush(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = chunkedPush(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = chunkedPush(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          chunkedSplice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n\nfunction tokenizeAttention(effects, ok) {\n  var before = classifyCharacter(this.previous)\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n\n  function sequence(code) {\n    var token\n    var after\n    var open\n    var close\n\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    token = effects.exit('attentionSequence')\n    after = classifyCharacter(code)\n    open = !after || (after === 2 && before)\n    close = !before || (before === 2 && after)\n    token._open = marker === 42 ? open : open && (before || !close)\n    token._close = marker === 42 ? close : close && (after || !open)\n    return ok(code)\n  }\n}\n\nmodule.exports = attention\n","'use strict'\n\n// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nvar unicodePunctuation = /[!-\\/:-@\\[-`\\{-~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n\nmodule.exports = unicodePunctuation\n","'use strict'\n\n// chunks (replacement characters, tabs, or line endings).\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n  return point\n}\n\nmodule.exports = movePoint\n","'use strict'\n\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js')\nvar asciiAlpha = require('../character/ascii-alpha.js')\nvar asciiAtext = require('../character/ascii-atext.js')\nvar asciiControl = require('../character/ascii-control.js')\n\nvar autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  var size = 1\n  return start\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n\nmodule.exports = autolink\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\nmodule.exports = asciiAtext\n","'use strict'\n\nvar markdownSpace = require('../character/markdown-space.js')\nvar factorySpace = require('./factory-space.js')\n\nvar blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit: exit\n}\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  var self = this\n  return start\n\n  function start(code) {\n    if (code === 62) {\n      if (!self.containerState.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        self.containerState.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.indexOf('codeIndented') > -1\n      ? undefined\n      : 4\n  )\n}\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n\nmodule.exports = blockQuote\n","'use strict'\n\nvar asciiPunctuation = require('../character/ascii-punctuation.js')\n\nvar characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = characterEscape\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\nmodule.exports = asciiPunctuation\n","'use strict'\n\nvar decodeEntity = require('parse-entities/decode-entity.js')\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js')\nvar asciiDigit = require('../character/ascii-digit.js')\nvar asciiHexDigit = require('../character/ascii-hex-digit.js')\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {default: e}\n}\n\nvar decodeEntity__default = /*#__PURE__*/ _interopDefaultLegacy(decodeEntity)\n\nvar characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  var self = this\n  var size = 0\n  var max\n  var test\n  return start\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n\n  function value(code) {\n    var token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeEntity__default['default'](self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = characterReference\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\nmodule.exports = asciiHexDigit\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('./factory-space.js')\nvar prefixSize = require('../util/prefix-size.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\n\nvar codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  var self = this\n  var closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  var initialPrefix = prefixSize(this.events, 'linePrefix')\n  var sizeOpen = 0\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : content(code)\n  }\n\n  function content(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return effects.attempt(\n        closingFenceConstruct,\n        after,\n        initialPrefix\n          ? factorySpace(effects, content, 'linePrefix', initialPrefix + 1)\n          : content\n      )\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return content(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    var size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.indexOf('codeIndented') > -1\n        ? undefined\n        : 4\n    )\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n\nmodule.exports = codeFenced\n","'use strict'\n\nvar chunkedSplice = require('../util/chunked-splice.js')\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('./factory-space.js')\nvar prefixSize = require('../util/prefix-size.js')\n\nvar codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented,\n  resolve: resolveCodeIndented\n}\nvar indentedContentConstruct = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n\nfunction resolveCodeIndented(events, context) {\n  var code = {\n    type: 'codeIndented',\n    start: events[0][1].start,\n    end: events[events.length - 1][1].end\n  }\n  chunkedSplice(events, 0, 0, [['enter', code, context]])\n  chunkedSplice(events, events.length, 0, [['exit', code, context]])\n  return events\n}\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  return effects.attempt(indentedContentConstruct, afterPrefix, nok)\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return ok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContentConstruct, afterPrefix, ok)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n}\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  var self = this\n  return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)\n\n  function afterPrefix(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)\n    }\n\n    return prefixSize(self.events, 'linePrefix') < 4 ? nok(code) : ok(code)\n  }\n}\n\nmodule.exports = codeIndented\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\n\nvar codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous: previous\n}\n\nfunction resolveCodeText(events) {\n  var tailExitIndex = events.length - 4\n  var headEnterIndex = 3\n  var index\n  var enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[tailExitIndex][1].type = events[headEnterIndex][1].type =\n          'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  var sizeOpen = 0\n  var size\n  var token\n  return start\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n\nmodule.exports = codeText\n","'use strict'\n\nvar normalizeIdentifier = require('../util/normalize-identifier.js')\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('./factory-space.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar factoryDestination = require('./factory-destination.js')\nvar factoryLabel = require('./factory-label.js')\nvar factoryWhitespace = require('./factory-whitespace.js')\nvar factoryTitle = require('./factory-title.js')\n\nvar definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\nvar titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  var self = this\n  var identifier\n  return start\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (self.parser.defined.indexOf(identifier) < 0) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n\nmodule.exports = definition\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\n\nvar hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = hardBreakEscape\n","'use strict'\n\nvar chunkedSplice = require('../util/chunked-splice.js')\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar factorySpace = require('./factory-space.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\n\nvar headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n\nfunction resolveHeadingAtx(events, context) {\n  var contentEnd = events.length - 2\n  var contentStart = 3\n  var content\n  var text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: 'text'\n    }\n    chunkedSplice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  var self = this\n  var size = 0\n  return start\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n\nmodule.exports = headingAtx\n","'use strict'\n\nvar fromCharCode = require('../constant/from-char-code.js')\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js')\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar partialBlankLine = require('./partial-blank-line.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar asciiAlpha = require('../character/ascii-alpha.js')\nvar htmlBlockNames = require('../constant/html-block-names.js')\nvar htmlRawNames = require('../constant/html-raw-names.js')\n\nvar htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\nvar nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n\nfunction resolveToHtmlFlow(events) {\n  var index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  var self = this\n  var kind\n  var startTag\n  var buffer\n  var index\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.indexOf(buffer.toLowerCase()) > -1\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.indexOf(buffer.toLowerCase()) > -1) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting.\n\n      return self.interrupt\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = undefined\n    return completeAttributeValueUnquoted(code)\n  }\n\n  function completeAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return htmlContinueStart\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.indexOf(buffer.toLowerCase()) > -1) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    return continuation(code)\n  }\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(partialBlankLine, ok, nok)\n  }\n}\n\nmodule.exports = htmlFlow\n","'use strict'\n\n// This module is copied from <https://spec.commonmark.org/0.29/#html-blocks>.\nvar basics = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\nmodule.exports = basics\n","'use strict'\n\n// This module is copied from <https://spec.commonmark.org/0.29/#html-blocks>.\nvar raws = ['pre', 'script', 'style', 'textarea']\n\nmodule.exports = raws\n","'use strict'\n\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js')\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar factorySpace = require('./factory-space.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar asciiAlpha = require('../character/ascii-alpha.js')\n\nvar htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  var self = this\n  var marker\n  var buffer\n  var index\n  var returnState\n  return start\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.indexOf('codeIndented') > -1\n        ? undefined\n        : 4\n    )\n  }\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = htmlText\n","'use strict'\n\nvar labelEnd = require('./label-end.js')\n\nvar labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  var self = this\n  return start\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    /* c8 ignore next */\n    return code === 94 &&\n      /* c8 ignore next */\n      '_hiddenFootnoteSupport' in self.parser.constructs\n      ? /* c8 ignore next */\n        nok(code)\n      : ok(code)\n  }\n}\n\nmodule.exports = labelStartImage\n","'use strict'\n\nvar labelEnd = require('./label-end.js')\n\nvar labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  var self = this\n  return start\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n\n  function after(code) {\n    /* c8 ignore next */\n    return code === 94 &&\n      /* c8 ignore next */\n      '_hiddenFootnoteSupport' in self.parser.constructs\n      ? /* c8 ignore next */\n        nok(code)\n      : ok(code)\n  }\n}\n\nmodule.exports = labelStartLink\n","'use strict'\n\nvar factorySpace = require('./factory-space.js')\n\nvar lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n\nmodule.exports = lineEnding\n","'use strict'\n\nvar markdownSpace = require('../character/markdown-space.js')\nvar factorySpace = require('./factory-space.js')\nvar partialBlankLine = require('./partial-blank-line.js')\nvar sizeChunks = require('../util/size-chunks.js')\nvar prefixSize = require('../util/prefix-size.js')\nvar asciiDigit = require('../character/ascii-digit.js')\nvar thematicBreak = require('./thematic-break.js')\n\nvar list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\nvar listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\nvar indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n\nfunction tokenizeListStart(effects, ok, nok) {\n  var self = this\n  var initialSize = prefixSize(self.events, 'linePrefix')\n  var size = 0\n  return start\n\n  function start(code) {\n    var kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      partialBlankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize + sizeChunks(self.sliceStream(effects.exit('listItemPrefix')))\n    return ok(code)\n  }\n}\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  var self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(partialBlankLine, onBlank, notBlank)\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine\n    return ok(code)\n  }\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.indexOf('codeIndented') > -1\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n\nfunction tokenizeIndent(effects, ok, nok) {\n  var self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n\n  function afterPrefix(code) {\n    return prefixSize(self.events, 'listItemIndent') ===\n      self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  var self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.indexOf('codeIndented') > -1\n      ? undefined\n      : 4 + 1\n  )\n\n  function afterPrefix(code) {\n    return markdownSpace(code) ||\n      !prefixSize(self.events, 'listItemPrefixWhitespace')\n      ? nok(code)\n      : ok(code)\n  }\n}\n\nmodule.exports = list\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('./factory-space.js')\nvar shallow = require('../util/shallow.js')\n\nvar setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n\nfunction resolveToSetextUnderline(events, context) {\n  var index = events.length\n  var content\n  var text\n  var definition\n  var heading // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  heading = {\n    type: 'setextHeading',\n    start: shallow(events[text][1].start),\n    end: shallow(events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = shallow(events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  var self = this\n  var index = self.events.length\n  var marker\n  var paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n\n  function start(code) {\n    if (!self.lazy && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = setextUnderline\n","'use strict'\n\nvar search = /[\\0\\t\\n\\r]/g\n\nfunction preprocess() {\n  var start = true\n  var column = 1\n  var buffer = ''\n  var atCarriageReturn\n  return preprocessor\n\n  function preprocessor(value, encoding, end) {\n    var chunks = []\n    var match\n    var next\n    var startPosition\n    var endPosition\n    var code\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition = match ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        if (code === 0) {\n          chunks.push(65533)\n          column++\n        } else if (code === 9) {\n          next = Math.ceil(column / 4) * 4\n          chunks.push(-2)\n\n          while (column++ < next) chunks.push(-1)\n        } else if (code === 10) {\n          chunks.push(-4)\n          column = 1\n        } // Must be carriage return.\n        else {\n          atCarriageReturn = true\n          column = 1\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n\nmodule.exports = preprocess\n","'use strict'\n\nvar subtokenize = require('./util/subtokenize.js')\n\nfunction postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n\nmodule.exports = postprocess\n"],"sourceRoot":""}